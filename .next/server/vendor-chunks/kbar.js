"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/kbar";
exports.ids = ["vendor-chunks/kbar"];
exports.modules = {

/***/ "(ssr)/./node_modules/kbar/lib/InternalEvents.js":
/*!*************************************************!*\
  !*** ./node_modules/kbar/lib/InternalEvents.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.InternalEvents = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar tinykeys_1 = __importDefault(__webpack_require__(/*! ./tinykeys */ \"(ssr)/./node_modules/kbar/lib/tinykeys.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nfunction InternalEvents() {\n    useToggleHandler();\n    useDocumentLock();\n    useShortcuts();\n    useFocusHandler();\n    return null;\n}\nexports.InternalEvents = InternalEvents;\n/**\n * `useToggleHandler` handles the keyboard events for toggling kbar.\n */ function useToggleHandler() {\n    var _a, _b;\n    var _c = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            visualState: state.visualState,\n            showing: state.visualState !== types_1.VisualState.hidden,\n            disabled: state.disabled\n        };\n    }), query = _c.query, options = _c.options, visualState = _c.visualState, showing = _c.showing, disabled = _c.disabled;\n    React.useEffect(function() {\n        var _a;\n        var close = function() {\n            query.setVisualState(function(vs) {\n                if (vs === types_1.VisualState.hidden || vs === types_1.VisualState.animatingOut) {\n                    return vs;\n                }\n                return types_1.VisualState.animatingOut;\n            });\n        };\n        if (disabled) {\n            close();\n            return;\n        }\n        var shortcut = options.toggleShortcut || \"$mod+k\";\n        var unsubscribe = (0, tinykeys_1.default)(window, (_a = {}, _a[shortcut] = function(event) {\n            var _a, _b, _c, _d;\n            if (event.defaultPrevented) return;\n            event.preventDefault();\n            query.toggle();\n            if (showing) {\n                (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            } else {\n                (_d = (_c = options.callbacks) === null || _c === void 0 ? void 0 : _c.onOpen) === null || _d === void 0 ? void 0 : _d.call(_c);\n            }\n        }, _a.Escape = function(event) {\n            var _a, _b;\n            if (showing) {\n                event.stopPropagation();\n                event.preventDefault();\n                (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n            close();\n        }, _a));\n        return function() {\n            unsubscribe();\n        };\n    }, [\n        options.callbacks,\n        options.toggleShortcut,\n        query,\n        showing,\n        disabled\n    ]);\n    var timeoutRef = React.useRef();\n    var runAnimateTimer = React.useCallback(function(vs) {\n        var _a, _b;\n        var ms = 0;\n        if (vs === types_1.VisualState.animatingIn) {\n            ms = ((_a = options.animations) === null || _a === void 0 ? void 0 : _a.enterMs) || 0;\n        }\n        if (vs === types_1.VisualState.animatingOut) {\n            ms = ((_b = options.animations) === null || _b === void 0 ? void 0 : _b.exitMs) || 0;\n        }\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = setTimeout(function() {\n            var backToRoot = false;\n            // TODO: setVisualState argument should be a function or just a VisualState value.\n            query.setVisualState(function() {\n                var finalVs = vs === types_1.VisualState.animatingIn ? types_1.VisualState.showing : types_1.VisualState.hidden;\n                if (finalVs === types_1.VisualState.hidden) {\n                    backToRoot = true;\n                }\n                return finalVs;\n            });\n            if (backToRoot) {\n                query.setCurrentRootAction(null);\n            }\n        }, ms);\n    }, [\n        (_a = options.animations) === null || _a === void 0 ? void 0 : _a.enterMs,\n        (_b = options.animations) === null || _b === void 0 ? void 0 : _b.exitMs,\n        query\n    ]);\n    React.useEffect(function() {\n        switch(visualState){\n            case types_1.VisualState.animatingIn:\n            case types_1.VisualState.animatingOut:\n                runAnimateTimer(visualState);\n                break;\n        }\n    }, [\n        runAnimateTimer,\n        visualState\n    ]);\n}\n/**\n * `useDocumentLock` is a simple implementation for preventing the\n * underlying page content from scrolling when kbar is open.\n */ function useDocumentLock() {\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            visualState: state.visualState\n        };\n    }), visualState = _a.visualState, options = _a.options;\n    React.useEffect(function() {\n        if (options.disableDocumentLock) return;\n        if (visualState === types_1.VisualState.animatingIn) {\n            document.body.style.overflow = \"hidden\";\n            if (!options.disableScrollbarManagement) {\n                var scrollbarWidth = (0, utils_1.getScrollbarWidth)();\n                // take into account the margins explicitly added by the consumer\n                var mr = getComputedStyle(document.body)[\"margin-right\"];\n                if (mr) {\n                    // remove non-numeric values; px, rem, em, etc.\n                    scrollbarWidth += Number(mr.replace(/\\D/g, \"\"));\n                }\n                document.body.style.marginRight = scrollbarWidth + \"px\";\n            }\n        } else if (visualState === types_1.VisualState.hidden) {\n            document.body.style.removeProperty(\"overflow\");\n            if (!options.disableScrollbarManagement) {\n                document.body.style.removeProperty(\"margin-right\");\n            }\n        }\n    }, [\n        options.disableDocumentLock,\n        options.disableScrollbarManagement,\n        visualState\n    ]);\n}\n/**\n * Reference: https://github.com/jamiebuilds/tinykeys/issues/37\n *\n * Fixes an issue where simultaneous key commands for shortcuts;\n * ie given two actions with shortcuts ['t','s'] and ['s'], pressing\n * 't' and 's' consecutively will cause both shortcuts to fire.\n *\n * `wrap` sets each keystroke event in a WeakSet, and ensures that\n * if ['t', 's'] are pressed, then the subsequent ['s'] event will\n * be ignored. This depends on the order in which we register the\n * shortcuts to tinykeys, which is handled below.\n */ var handled = new WeakSet();\nfunction wrap(handler) {\n    return function(event) {\n        if (handled.has(event)) return;\n        handler(event);\n        handled.add(event);\n    };\n}\n/**\n * `useShortcuts` registers and listens to keyboard strokes and\n * performs actions for patterns that match the user defined `shortcut`.\n */ function useShortcuts() {\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            actions: state.actions,\n            open: state.visualState === types_1.VisualState.showing,\n            disabled: state.disabled\n        };\n    }), actions = _a.actions, query = _a.query, open = _a.open, options = _a.options, disabled = _a.disabled;\n    React.useEffect(function() {\n        var _a;\n        if (open || disabled) return;\n        var actionsList = Object.keys(actions).map(function(key) {\n            return actions[key];\n        });\n        var actionsWithShortcuts = [];\n        for(var _i = 0, actionsList_1 = actionsList; _i < actionsList_1.length; _i++){\n            var action = actionsList_1[_i];\n            if (!((_a = action.shortcut) === null || _a === void 0 ? void 0 : _a.length)) {\n                continue;\n            }\n            actionsWithShortcuts.push(action);\n        }\n        actionsWithShortcuts = actionsWithShortcuts.sort(function(a, b) {\n            return b.shortcut.join(\" \").length - a.shortcut.join(\" \").length;\n        });\n        var shortcutsMap = {};\n        var _loop_1 = function(action) {\n            var shortcut = action.shortcut.join(\" \");\n            shortcutsMap[shortcut] = wrap(function(event) {\n                var _a, _b, _c, _d, _e, _f;\n                if ((0, utils_1.shouldRejectKeystrokes)()) return;\n                event.preventDefault();\n                if ((_a = action.children) === null || _a === void 0 ? void 0 : _a.length) {\n                    query.setCurrentRootAction(action.id);\n                    query.toggle();\n                    (_c = (_b = options.callbacks) === null || _b === void 0 ? void 0 : _b.onOpen) === null || _c === void 0 ? void 0 : _c.call(_b);\n                } else {\n                    (_d = action.command) === null || _d === void 0 ? void 0 : _d.perform();\n                    (_f = (_e = options.callbacks) === null || _e === void 0 ? void 0 : _e.onSelectAction) === null || _f === void 0 ? void 0 : _f.call(_e, action);\n                }\n            });\n        };\n        for(var _b = 0, actionsWithShortcuts_1 = actionsWithShortcuts; _b < actionsWithShortcuts_1.length; _b++){\n            var action = actionsWithShortcuts_1[_b];\n            _loop_1(action);\n        }\n        var unsubscribe = (0, tinykeys_1.default)(window, shortcutsMap, {\n            timeout: 400\n        });\n        return function() {\n            unsubscribe();\n        };\n    }, [\n        actions,\n        open,\n        options.callbacks,\n        query,\n        disabled\n    ]);\n}\n/**\n * `useFocusHandler` ensures that focus is set back on the element which was\n * in focus prior to kbar being triggered.\n */ function useFocusHandler() {\n    var rFirstRender = React.useRef(true);\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            isShowing: state.visualState === types_1.VisualState.showing || state.visualState === types_1.VisualState.animatingIn\n        };\n    }), isShowing = _a.isShowing, query = _a.query;\n    var activeElementRef = React.useRef(null);\n    React.useEffect(function() {\n        if (rFirstRender.current) {\n            rFirstRender.current = false;\n            return;\n        }\n        if (isShowing) {\n            activeElementRef.current = document.activeElement;\n            return;\n        }\n        // This fixes an issue on Safari where closing kbar causes the entire\n        // page to scroll to the bottom. The reason this was happening was due\n        // to the search input still in focus when we removed it from the dom.\n        var currentActiveElement = document.activeElement;\n        if ((currentActiveElement === null || currentActiveElement === void 0 ? void 0 : currentActiveElement.tagName.toLowerCase()) === \"input\") {\n            currentActiveElement.blur();\n        }\n        var activeElement = activeElementRef.current;\n        if (activeElement && activeElement !== currentActiveElement) {\n            activeElement.focus();\n        }\n    }, [\n        isShowing\n    ]);\n    // When focus is blurred from the search input while kbar is still\n    // open, any keystroke should set focus back to the search input.\n    React.useEffect(function() {\n        function handler(event) {\n            var input = query.getInput();\n            if (event.target !== input) {\n                input.focus();\n            }\n        }\n        if (isShowing) {\n            window.addEventListener(\"keydown\", handler);\n            return function() {\n                window.removeEventListener(\"keydown\", handler);\n            };\n        }\n    }, [\n        isShowing,\n        query\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvSW50ZXJuYWxFdmVudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQU1DLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCSixPQUFPTyxjQUFjLENBQUNMLEdBQUdHLElBQUk7UUFBRUcsWUFBWTtRQUFNQyxLQUFLO1lBQWEsT0FBT04sQ0FBQyxDQUFDQyxFQUFFO1FBQUU7SUFBRTtBQUN0RixJQUFNLFNBQVNGLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlNLHFCQUFxQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGtCQUFrQixJQUFNVixDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFUyxDQUFDO0lBQ3pGWCxPQUFPTyxjQUFjLENBQUNMLEdBQUcsV0FBVztRQUFFTSxZQUFZO1FBQU1JLE9BQU9EO0lBQUU7QUFDckUsSUFBSyxTQUFTVCxDQUFDLEVBQUVTLENBQUM7SUFDZFQsQ0FBQyxDQUFDLFVBQVUsR0FBR1M7QUFDbkI7QUFDQSxJQUFJRSxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVVDLEdBQUc7SUFDM0QsSUFBSUEsT0FBT0EsSUFBSUMsVUFBVSxFQUFFLE9BQU9EO0lBQ2xDLElBQUlFLFNBQVMsQ0FBQztJQUNkLElBQUlGLE9BQU8sTUFBTTtRQUFBLElBQUssSUFBSVYsS0FBS1UsSUFBSyxJQUFJVixNQUFNLGFBQWFKLE9BQU9pQixT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UTlGLE1BQU0rRixRQUFRO1lBQzFCLElBQUluRixNQUFNb0YsTUFBTSxLQUFLRixPQUFPO2dCQUN4QkEsTUFBTUQsS0FBSztZQUNmO1FBQ0o7UUFDQSxJQUFJUCxXQUFXO1lBQ1gzRSxPQUFPc0YsZ0JBQWdCLENBQUMsV0FBVzNDO1lBQ25DLE9BQU87Z0JBQ0gzQyxPQUFPdUYsbUJBQW1CLENBQUMsV0FBVzVDO1lBQzFDO1FBQ0o7SUFDSixHQUFHO1FBQUNnQztRQUFXdEY7S0FBTTtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kLW5leHRqcy1zdGFydGVyLWJsb2cvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvSW50ZXJuYWxFdmVudHMuanM/NDliNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbnRlcm5hbEV2ZW50cyA9IHZvaWQgMDtcbnZhciBSZWFjdCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwicmVhY3RcIikpO1xudmFyIHRpbnlrZXlzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vdGlueWtleXNcIikpO1xudmFyIHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbnZhciB1c2VLQmFyXzEgPSByZXF1aXJlKFwiLi91c2VLQmFyXCIpO1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmZ1bmN0aW9uIEludGVybmFsRXZlbnRzKCkge1xuICAgIHVzZVRvZ2dsZUhhbmRsZXIoKTtcbiAgICB1c2VEb2N1bWVudExvY2soKTtcbiAgICB1c2VTaG9ydGN1dHMoKTtcbiAgICB1c2VGb2N1c0hhbmRsZXIoKTtcbiAgICByZXR1cm4gbnVsbDtcbn1cbmV4cG9ydHMuSW50ZXJuYWxFdmVudHMgPSBJbnRlcm5hbEV2ZW50cztcbi8qKlxuICogYHVzZVRvZ2dsZUhhbmRsZXJgIGhhbmRsZXMgdGhlIGtleWJvYXJkIGV2ZW50cyBmb3IgdG9nZ2xpbmcga2Jhci5cbiAqL1xuZnVuY3Rpb24gdXNlVG9nZ2xlSGFuZGxlcigpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIHZhciBfYyA9ICgwLCB1c2VLQmFyXzEudXNlS0JhcikoZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiAoe1xuICAgICAgICB2aXN1YWxTdGF0ZTogc3RhdGUudmlzdWFsU3RhdGUsXG4gICAgICAgIHNob3dpbmc6IHN0YXRlLnZpc3VhbFN0YXRlICE9PSB0eXBlc18xLlZpc3VhbFN0YXRlLmhpZGRlbixcbiAgICAgICAgZGlzYWJsZWQ6IHN0YXRlLmRpc2FibGVkLFxuICAgIH0pOyB9KSwgcXVlcnkgPSBfYy5xdWVyeSwgb3B0aW9ucyA9IF9jLm9wdGlvbnMsIHZpc3VhbFN0YXRlID0gX2MudmlzdWFsU3RhdGUsIHNob3dpbmcgPSBfYy5zaG93aW5nLCBkaXNhYmxlZCA9IF9jLmRpc2FibGVkO1xuICAgIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdmFyIGNsb3NlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcXVlcnkuc2V0VmlzdWFsU3RhdGUoZnVuY3Rpb24gKHZzKSB7XG4gICAgICAgICAgICAgICAgaWYgKHZzID09PSB0eXBlc18xLlZpc3VhbFN0YXRlLmhpZGRlbiB8fCB2cyA9PT0gdHlwZXNfMS5WaXN1YWxTdGF0ZS5hbmltYXRpbmdPdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZXNfMS5WaXN1YWxTdGF0ZS5hbmltYXRpbmdPdXQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGRpc2FibGVkKSB7XG4gICAgICAgICAgICBjbG9zZSgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzaG9ydGN1dCA9IG9wdGlvbnMudG9nZ2xlU2hvcnRjdXQgfHwgXCIkbW9kK2tcIjtcbiAgICAgICAgdmFyIHVuc3Vic2NyaWJlID0gKDAsIHRpbnlrZXlzXzEuZGVmYXVsdCkod2luZG93LCAoX2EgPSB7fSxcbiAgICAgICAgICAgIF9hW3Nob3J0Y3V0XSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQuZGVmYXVsdFByZXZlbnRlZClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgcXVlcnkudG9nZ2xlKCk7XG4gICAgICAgICAgICAgICAgaWYgKHNob3dpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgKF9iID0gKF9hID0gb3B0aW9ucy5jYWxsYmFja3MpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5vbkNsb3NlKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAoX2QgPSAoX2MgPSBvcHRpb25zLmNhbGxiYWNrcykgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLm9uT3BlbikgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLmNhbGwoX2MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfYS5Fc2NhcGUgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgICAgIGlmIChzaG93aW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAoX2IgPSAoX2EgPSBvcHRpb25zLmNhbGxiYWNrcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm9uQ2xvc2UpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5jYWxsKF9hKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2xvc2UoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfYSkpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfTtcbiAgICB9LCBbb3B0aW9ucy5jYWxsYmFja3MsIG9wdGlvbnMudG9nZ2xlU2hvcnRjdXQsIHF1ZXJ5LCBzaG93aW5nLCBkaXNhYmxlZF0pO1xuICAgIHZhciB0aW1lb3V0UmVmID0gUmVhY3QudXNlUmVmKCk7XG4gICAgdmFyIHJ1bkFuaW1hdGVUaW1lciA9IFJlYWN0LnVzZUNhbGxiYWNrKGZ1bmN0aW9uICh2cykge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICB2YXIgbXMgPSAwO1xuICAgICAgICBpZiAodnMgPT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuYW5pbWF0aW5nSW4pIHtcbiAgICAgICAgICAgIG1zID0gKChfYSA9IG9wdGlvbnMuYW5pbWF0aW9ucykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmVudGVyTXMpIHx8IDA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZzID09PSB0eXBlc18xLlZpc3VhbFN0YXRlLmFuaW1hdGluZ091dCkge1xuICAgICAgICAgICAgbXMgPSAoKF9iID0gb3B0aW9ucy5hbmltYXRpb25zKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZXhpdE1zKSB8fCAwO1xuICAgICAgICB9XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0UmVmLmN1cnJlbnQpO1xuICAgICAgICB0aW1lb3V0UmVmLmN1cnJlbnQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBiYWNrVG9Sb290ID0gZmFsc2U7XG4gICAgICAgICAgICAvLyBUT0RPOiBzZXRWaXN1YWxTdGF0ZSBhcmd1bWVudCBzaG91bGQgYmUgYSBmdW5jdGlvbiBvciBqdXN0IGEgVmlzdWFsU3RhdGUgdmFsdWUuXG4gICAgICAgICAgICBxdWVyeS5zZXRWaXN1YWxTdGF0ZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGZpbmFsVnMgPSB2cyA9PT0gdHlwZXNfMS5WaXN1YWxTdGF0ZS5hbmltYXRpbmdJblxuICAgICAgICAgICAgICAgICAgICA/IHR5cGVzXzEuVmlzdWFsU3RhdGUuc2hvd2luZ1xuICAgICAgICAgICAgICAgICAgICA6IHR5cGVzXzEuVmlzdWFsU3RhdGUuaGlkZGVuO1xuICAgICAgICAgICAgICAgIGlmIChmaW5hbFZzID09PSB0eXBlc18xLlZpc3VhbFN0YXRlLmhpZGRlbikge1xuICAgICAgICAgICAgICAgICAgICBiYWNrVG9Sb290ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZpbmFsVnM7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChiYWNrVG9Sb290KSB7XG4gICAgICAgICAgICAgICAgcXVlcnkuc2V0Q3VycmVudFJvb3RBY3Rpb24obnVsbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIG1zKTtcbiAgICB9LCBbKF9hID0gb3B0aW9ucy5hbmltYXRpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZW50ZXJNcywgKF9iID0gb3B0aW9ucy5hbmltYXRpb25zKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZXhpdE1zLCBxdWVyeV0pO1xuICAgIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHN3aXRjaCAodmlzdWFsU3RhdGUpIHtcbiAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5WaXN1YWxTdGF0ZS5hbmltYXRpbmdJbjpcbiAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5WaXN1YWxTdGF0ZS5hbmltYXRpbmdPdXQ6XG4gICAgICAgICAgICAgICAgcnVuQW5pbWF0ZVRpbWVyKHZpc3VhbFN0YXRlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH0sIFtydW5BbmltYXRlVGltZXIsIHZpc3VhbFN0YXRlXSk7XG59XG4vKipcbiAqIGB1c2VEb2N1bWVudExvY2tgIGlzIGEgc2ltcGxlIGltcGxlbWVudGF0aW9uIGZvciBwcmV2ZW50aW5nIHRoZVxuICogdW5kZXJseWluZyBwYWdlIGNvbnRlbnQgZnJvbSBzY3JvbGxpbmcgd2hlbiBrYmFyIGlzIG9wZW4uXG4gKi9cbmZ1bmN0aW9uIHVzZURvY3VtZW50TG9jaygpIHtcbiAgICB2YXIgX2EgPSAoMCwgdXNlS0Jhcl8xLnVzZUtCYXIpKGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gKHtcbiAgICAgICAgdmlzdWFsU3RhdGU6IHN0YXRlLnZpc3VhbFN0YXRlLFxuICAgIH0pOyB9KSwgdmlzdWFsU3RhdGUgPSBfYS52aXN1YWxTdGF0ZSwgb3B0aW9ucyA9IF9hLm9wdGlvbnM7XG4gICAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMuZGlzYWJsZURvY3VtZW50TG9jaylcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKHZpc3VhbFN0YXRlID09PSB0eXBlc18xLlZpc3VhbFN0YXRlLmFuaW1hdGluZ0luKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcbiAgICAgICAgICAgIGlmICghb3B0aW9ucy5kaXNhYmxlU2Nyb2xsYmFyTWFuYWdlbWVudCkge1xuICAgICAgICAgICAgICAgIHZhciBzY3JvbGxiYXJXaWR0aCA9ICgwLCB1dGlsc18xLmdldFNjcm9sbGJhcldpZHRoKSgpO1xuICAgICAgICAgICAgICAgIC8vIHRha2UgaW50byBhY2NvdW50IHRoZSBtYXJnaW5zIGV4cGxpY2l0bHkgYWRkZWQgYnkgdGhlIGNvbnN1bWVyXG4gICAgICAgICAgICAgICAgdmFyIG1yID0gZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5ib2R5KVtcIm1hcmdpbi1yaWdodFwiXTtcbiAgICAgICAgICAgICAgICBpZiAobXIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gcmVtb3ZlIG5vbi1udW1lcmljIHZhbHVlczsgcHgsIHJlbSwgZW0sIGV0Yy5cbiAgICAgICAgICAgICAgICAgICAgc2Nyb2xsYmFyV2lkdGggKz0gTnVtYmVyKG1yLnJlcGxhY2UoL1xcRC9nLCBcIlwiKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUubWFyZ2luUmlnaHQgPSBzY3JvbGxiYXJXaWR0aCArIFwicHhcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh2aXN1YWxTdGF0ZSA9PT0gdHlwZXNfMS5WaXN1YWxTdGF0ZS5oaWRkZW4pIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUucmVtb3ZlUHJvcGVydHkoXCJvdmVyZmxvd1wiKTtcbiAgICAgICAgICAgIGlmICghb3B0aW9ucy5kaXNhYmxlU2Nyb2xsYmFyTWFuYWdlbWVudCkge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUucmVtb3ZlUHJvcGVydHkoXCJtYXJnaW4tcmlnaHRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LCBbXG4gICAgICAgIG9wdGlvbnMuZGlzYWJsZURvY3VtZW50TG9jayxcbiAgICAgICAgb3B0aW9ucy5kaXNhYmxlU2Nyb2xsYmFyTWFuYWdlbWVudCxcbiAgICAgICAgdmlzdWFsU3RhdGUsXG4gICAgXSk7XG59XG4vKipcbiAqIFJlZmVyZW5jZTogaHR0cHM6Ly9naXRodWIuY29tL2phbWllYnVpbGRzL3RpbnlrZXlzL2lzc3Vlcy8zN1xuICpcbiAqIEZpeGVzIGFuIGlzc3VlIHdoZXJlIHNpbXVsdGFuZW91cyBrZXkgY29tbWFuZHMgZm9yIHNob3J0Y3V0cztcbiAqIGllIGdpdmVuIHR3byBhY3Rpb25zIHdpdGggc2hvcnRjdXRzIFsndCcsJ3MnXSBhbmQgWydzJ10sIHByZXNzaW5nXG4gKiAndCcgYW5kICdzJyBjb25zZWN1dGl2ZWx5IHdpbGwgY2F1c2UgYm90aCBzaG9ydGN1dHMgdG8gZmlyZS5cbiAqXG4gKiBgd3JhcGAgc2V0cyBlYWNoIGtleXN0cm9rZSBldmVudCBpbiBhIFdlYWtTZXQsIGFuZCBlbnN1cmVzIHRoYXRcbiAqIGlmIFsndCcsICdzJ10gYXJlIHByZXNzZWQsIHRoZW4gdGhlIHN1YnNlcXVlbnQgWydzJ10gZXZlbnQgd2lsbFxuICogYmUgaWdub3JlZC4gVGhpcyBkZXBlbmRzIG9uIHRoZSBvcmRlciBpbiB3aGljaCB3ZSByZWdpc3RlciB0aGVcbiAqIHNob3J0Y3V0cyB0byB0aW55a2V5cywgd2hpY2ggaXMgaGFuZGxlZCBiZWxvdy5cbiAqL1xudmFyIGhhbmRsZWQgPSBuZXcgV2Vha1NldCgpO1xuZnVuY3Rpb24gd3JhcChoYW5kbGVyKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoaGFuZGxlZC5oYXMoZXZlbnQpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBoYW5kbGVyKGV2ZW50KTtcbiAgICAgICAgaGFuZGxlZC5hZGQoZXZlbnQpO1xuICAgIH07XG59XG4vKipcbiAqIGB1c2VTaG9ydGN1dHNgIHJlZ2lzdGVycyBhbmQgbGlzdGVucyB0byBrZXlib2FyZCBzdHJva2VzIGFuZFxuICogcGVyZm9ybXMgYWN0aW9ucyBmb3IgcGF0dGVybnMgdGhhdCBtYXRjaCB0aGUgdXNlciBkZWZpbmVkIGBzaG9ydGN1dGAuXG4gKi9cbmZ1bmN0aW9uIHVzZVNob3J0Y3V0cygpIHtcbiAgICB2YXIgX2EgPSAoMCwgdXNlS0Jhcl8xLnVzZUtCYXIpKGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gKHtcbiAgICAgICAgYWN0aW9uczogc3RhdGUuYWN0aW9ucyxcbiAgICAgICAgb3Blbjogc3RhdGUudmlzdWFsU3RhdGUgPT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuc2hvd2luZyxcbiAgICAgICAgZGlzYWJsZWQ6IHN0YXRlLmRpc2FibGVkLFxuICAgIH0pOyB9KSwgYWN0aW9ucyA9IF9hLmFjdGlvbnMsIHF1ZXJ5ID0gX2EucXVlcnksIG9wZW4gPSBfYS5vcGVuLCBvcHRpb25zID0gX2Eub3B0aW9ucywgZGlzYWJsZWQgPSBfYS5kaXNhYmxlZDtcbiAgICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGlmIChvcGVuIHx8IGRpc2FibGVkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgYWN0aW9uc0xpc3QgPSBPYmplY3Qua2V5cyhhY3Rpb25zKS5tYXAoZnVuY3Rpb24gKGtleSkgeyByZXR1cm4gYWN0aW9uc1trZXldOyB9KTtcbiAgICAgICAgdmFyIGFjdGlvbnNXaXRoU2hvcnRjdXRzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgYWN0aW9uc0xpc3RfMSA9IGFjdGlvbnNMaXN0OyBfaSA8IGFjdGlvbnNMaXN0XzEubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICB2YXIgYWN0aW9uID0gYWN0aW9uc0xpc3RfMVtfaV07XG4gICAgICAgICAgICBpZiAoISgoX2EgPSBhY3Rpb24uc2hvcnRjdXQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sZW5ndGgpKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhY3Rpb25zV2l0aFNob3J0Y3V0cy5wdXNoKGFjdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgYWN0aW9uc1dpdGhTaG9ydGN1dHMgPSBhY3Rpb25zV2l0aFNob3J0Y3V0cy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBiLnNob3J0Y3V0LmpvaW4oXCIgXCIpLmxlbmd0aCAtIGEuc2hvcnRjdXQuam9pbihcIiBcIikubGVuZ3RoOyB9KTtcbiAgICAgICAgdmFyIHNob3J0Y3V0c01hcCA9IHt9O1xuICAgICAgICB2YXIgX2xvb3BfMSA9IGZ1bmN0aW9uIChhY3Rpb24pIHtcbiAgICAgICAgICAgIHZhciBzaG9ydGN1dCA9IGFjdGlvbi5zaG9ydGN1dC5qb2luKFwiIFwiKTtcbiAgICAgICAgICAgIHNob3J0Y3V0c01hcFtzaG9ydGN1dF0gPSB3cmFwKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mO1xuICAgICAgICAgICAgICAgIGlmICgoMCwgdXRpbHNfMS5zaG91bGRSZWplY3RLZXlzdHJva2VzKSgpKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBpZiAoKF9hID0gYWN0aW9uLmNoaWxkcmVuKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5LnNldEN1cnJlbnRSb290QWN0aW9uKGFjdGlvbi5pZCk7XG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5LnRvZ2dsZSgpO1xuICAgICAgICAgICAgICAgICAgICAoX2MgPSAoX2IgPSBvcHRpb25zLmNhbGxiYWNrcykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLm9uT3BlbikgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmNhbGwoX2IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgKF9kID0gYWN0aW9uLmNvbW1hbmQpID09PSBudWxsIHx8IF9kID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZC5wZXJmb3JtKCk7XG4gICAgICAgICAgICAgICAgICAgIChfZiA9IChfZSA9IG9wdGlvbnMuY2FsbGJhY2tzKSA9PT0gbnVsbCB8fCBfZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Uub25TZWxlY3RBY3Rpb24pID09PSBudWxsIHx8IF9mID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZi5jYWxsKF9lLCBhY3Rpb24pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBmb3IgKHZhciBfYiA9IDAsIGFjdGlvbnNXaXRoU2hvcnRjdXRzXzEgPSBhY3Rpb25zV2l0aFNob3J0Y3V0czsgX2IgPCBhY3Rpb25zV2l0aFNob3J0Y3V0c18xLmxlbmd0aDsgX2IrKykge1xuICAgICAgICAgICAgdmFyIGFjdGlvbiA9IGFjdGlvbnNXaXRoU2hvcnRjdXRzXzFbX2JdO1xuICAgICAgICAgICAgX2xvb3BfMShhY3Rpb24pO1xuICAgICAgICB9XG4gICAgICAgIHZhciB1bnN1YnNjcmliZSA9ICgwLCB0aW55a2V5c18xLmRlZmF1bHQpKHdpbmRvdywgc2hvcnRjdXRzTWFwLCB7XG4gICAgICAgICAgICB0aW1lb3V0OiA0MDAsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfTtcbiAgICB9LCBbYWN0aW9ucywgb3Blbiwgb3B0aW9ucy5jYWxsYmFja3MsIHF1ZXJ5LCBkaXNhYmxlZF0pO1xufVxuLyoqXG4gKiBgdXNlRm9jdXNIYW5kbGVyYCBlbnN1cmVzIHRoYXQgZm9jdXMgaXMgc2V0IGJhY2sgb24gdGhlIGVsZW1lbnQgd2hpY2ggd2FzXG4gKiBpbiBmb2N1cyBwcmlvciB0byBrYmFyIGJlaW5nIHRyaWdnZXJlZC5cbiAqL1xuZnVuY3Rpb24gdXNlRm9jdXNIYW5kbGVyKCkge1xuICAgIHZhciByRmlyc3RSZW5kZXIgPSBSZWFjdC51c2VSZWYodHJ1ZSk7XG4gICAgdmFyIF9hID0gKDAsIHVzZUtCYXJfMS51c2VLQmFyKShmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuICh7XG4gICAgICAgIGlzU2hvd2luZzogc3RhdGUudmlzdWFsU3RhdGUgPT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuc2hvd2luZyB8fFxuICAgICAgICAgICAgc3RhdGUudmlzdWFsU3RhdGUgPT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuYW5pbWF0aW5nSW4sXG4gICAgfSk7IH0pLCBpc1Nob3dpbmcgPSBfYS5pc1Nob3dpbmcsIHF1ZXJ5ID0gX2EucXVlcnk7XG4gICAgdmFyIGFjdGl2ZUVsZW1lbnRSZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gICAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHJGaXJzdFJlbmRlci5jdXJyZW50KSB7XG4gICAgICAgICAgICByRmlyc3RSZW5kZXIuY3VycmVudCA9IGZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1Nob3dpbmcpIHtcbiAgICAgICAgICAgIGFjdGl2ZUVsZW1lbnRSZWYuY3VycmVudCA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gVGhpcyBmaXhlcyBhbiBpc3N1ZSBvbiBTYWZhcmkgd2hlcmUgY2xvc2luZyBrYmFyIGNhdXNlcyB0aGUgZW50aXJlXG4gICAgICAgIC8vIHBhZ2UgdG8gc2Nyb2xsIHRvIHRoZSBib3R0b20uIFRoZSByZWFzb24gdGhpcyB3YXMgaGFwcGVuaW5nIHdhcyBkdWVcbiAgICAgICAgLy8gdG8gdGhlIHNlYXJjaCBpbnB1dCBzdGlsbCBpbiBmb2N1cyB3aGVuIHdlIHJlbW92ZWQgaXQgZnJvbSB0aGUgZG9tLlxuICAgICAgICB2YXIgY3VycmVudEFjdGl2ZUVsZW1lbnQgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuICAgICAgICBpZiAoKGN1cnJlbnRBY3RpdmVFbGVtZW50ID09PSBudWxsIHx8IGN1cnJlbnRBY3RpdmVFbGVtZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjdXJyZW50QWN0aXZlRWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCkpID09PSBcImlucHV0XCIpIHtcbiAgICAgICAgICAgIGN1cnJlbnRBY3RpdmVFbGVtZW50LmJsdXIoKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWN0aXZlRWxlbWVudCA9IGFjdGl2ZUVsZW1lbnRSZWYuY3VycmVudDtcbiAgICAgICAgaWYgKGFjdGl2ZUVsZW1lbnQgJiYgYWN0aXZlRWxlbWVudCAhPT0gY3VycmVudEFjdGl2ZUVsZW1lbnQpIHtcbiAgICAgICAgICAgIGFjdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgIH0sIFtpc1Nob3dpbmddKTtcbiAgICAvLyBXaGVuIGZvY3VzIGlzIGJsdXJyZWQgZnJvbSB0aGUgc2VhcmNoIGlucHV0IHdoaWxlIGtiYXIgaXMgc3RpbGxcbiAgICAvLyBvcGVuLCBhbnkga2V5c3Ryb2tlIHNob3VsZCBzZXQgZm9jdXMgYmFjayB0byB0aGUgc2VhcmNoIGlucHV0LlxuICAgIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIGhhbmRsZXIoZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBpbnB1dCA9IHF1ZXJ5LmdldElucHV0KCk7XG4gICAgICAgICAgICBpZiAoZXZlbnQudGFyZ2V0ICE9PSBpbnB1dCkge1xuICAgICAgICAgICAgICAgIGlucHV0LmZvY3VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzU2hvd2luZykge1xuICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZXIpO1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlcik7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfSwgW2lzU2hvd2luZywgcXVlcnldKTtcbn1cbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIl9fc2V0TW9kdWxlRGVmYXVsdCIsInYiLCJ2YWx1ZSIsIl9faW1wb3J0U3RhciIsIm1vZCIsIl9fZXNNb2R1bGUiLCJyZXN1bHQiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJfX2ltcG9ydERlZmF1bHQiLCJleHBvcnRzIiwiSW50ZXJuYWxFdmVudHMiLCJSZWFjdCIsInJlcXVpcmUiLCJ0aW55a2V5c18xIiwidHlwZXNfMSIsInVzZUtCYXJfMSIsInV0aWxzXzEiLCJ1c2VUb2dnbGVIYW5kbGVyIiwidXNlRG9jdW1lbnRMb2NrIiwidXNlU2hvcnRjdXRzIiwidXNlRm9jdXNIYW5kbGVyIiwiX2EiLCJfYiIsIl9jIiwidXNlS0JhciIsInN0YXRlIiwidmlzdWFsU3RhdGUiLCJzaG93aW5nIiwiVmlzdWFsU3RhdGUiLCJoaWRkZW4iLCJkaXNhYmxlZCIsInF1ZXJ5Iiwib3B0aW9ucyIsInVzZUVmZmVjdCIsImNsb3NlIiwic2V0VmlzdWFsU3RhdGUiLCJ2cyIsImFuaW1hdGluZ091dCIsInNob3J0Y3V0IiwidG9nZ2xlU2hvcnRjdXQiLCJ1bnN1YnNjcmliZSIsImRlZmF1bHQiLCJ3aW5kb3ciLCJldmVudCIsIl9kIiwiZGVmYXVsdFByZXZlbnRlZCIsInByZXZlbnREZWZhdWx0IiwidG9nZ2xlIiwiY2FsbGJhY2tzIiwib25DbG9zZSIsIm9uT3BlbiIsIkVzY2FwZSIsInN0b3BQcm9wYWdhdGlvbiIsInRpbWVvdXRSZWYiLCJ1c2VSZWYiLCJydW5BbmltYXRlVGltZXIiLCJ1c2VDYWxsYmFjayIsIm1zIiwiYW5pbWF0aW5nSW4iLCJhbmltYXRpb25zIiwiZW50ZXJNcyIsImV4aXRNcyIsImNsZWFyVGltZW91dCIsImN1cnJlbnQiLCJzZXRUaW1lb3V0IiwiYmFja1RvUm9vdCIsImZpbmFsVnMiLCJzZXRDdXJyZW50Um9vdEFjdGlvbiIsImRpc2FibGVEb2N1bWVudExvY2siLCJkb2N1bWVudCIsImJvZHkiLCJzdHlsZSIsIm92ZXJmbG93IiwiZGlzYWJsZVNjcm9sbGJhck1hbmFnZW1lbnQiLCJzY3JvbGxiYXJXaWR0aCIsImdldFNjcm9sbGJhcldpZHRoIiwibXIiLCJnZXRDb21wdXRlZFN0eWxlIiwiTnVtYmVyIiwicmVwbGFjZSIsIm1hcmdpblJpZ2h0IiwicmVtb3ZlUHJvcGVydHkiLCJoYW5kbGVkIiwiV2Vha1NldCIsIndyYXAiLCJoYW5kbGVyIiwiaGFzIiwiYWRkIiwiYWN0aW9ucyIsIm9wZW4iLCJhY3Rpb25zTGlzdCIsImtleXMiLCJtYXAiLCJrZXkiLCJhY3Rpb25zV2l0aFNob3J0Y3V0cyIsIl9pIiwiYWN0aW9uc0xpc3RfMSIsImxlbmd0aCIsImFjdGlvbiIsInB1c2giLCJzb3J0IiwiYSIsImIiLCJqb2luIiwic2hvcnRjdXRzTWFwIiwiX2xvb3BfMSIsIl9lIiwiX2YiLCJzaG91bGRSZWplY3RLZXlzdHJva2VzIiwiY2hpbGRyZW4iLCJpZCIsImNvbW1hbmQiLCJwZXJmb3JtIiwib25TZWxlY3RBY3Rpb24iLCJhY3Rpb25zV2l0aFNob3J0Y3V0c18xIiwidGltZW91dCIsInJGaXJzdFJlbmRlciIsImlzU2hvd2luZyIsImFjdGl2ZUVsZW1lbnRSZWYiLCJhY3RpdmVFbGVtZW50IiwiY3VycmVudEFjdGl2ZUVsZW1lbnQiLCJ0YWdOYW1lIiwidG9Mb3dlckNhc2UiLCJibHVyIiwiZm9jdXMiLCJpbnB1dCIsImdldElucHV0IiwidGFyZ2V0IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/InternalEvents.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarAnimator.js":
/*!***********************************************!*\
  !*** ./node_modules/kbar/lib/KBarAnimator.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarAnimator = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar appearanceAnimationKeyframes = [\n    {\n        opacity: 0,\n        transform: \"scale(.99)\"\n    },\n    {\n        opacity: 1,\n        transform: \"scale(1.01)\"\n    },\n    {\n        opacity: 1,\n        transform: \"scale(1)\"\n    }\n];\nvar bumpAnimationKeyframes = [\n    {\n        transform: \"scale(1)\"\n    },\n    {\n        transform: \"scale(.98)\"\n    },\n    {\n        transform: \"scale(1)\"\n    }\n];\nvar KBarAnimator = function(_a) {\n    var _b, _c;\n    var children = _a.children, style = _a.style, className = _a.className, disableCloseOnOuterClick = _a.disableCloseOnOuterClick;\n    var _d = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            visualState: state.visualState,\n            currentRootActionId: state.currentRootActionId\n        };\n    }), visualState = _d.visualState, currentRootActionId = _d.currentRootActionId, query = _d.query, options = _d.options;\n    var outerRef = React.useRef(null);\n    var innerRef = React.useRef(null);\n    var enterMs = ((_b = options === null || options === void 0 ? void 0 : options.animations) === null || _b === void 0 ? void 0 : _b.enterMs) || 0;\n    var exitMs = ((_c = options === null || options === void 0 ? void 0 : options.animations) === null || _c === void 0 ? void 0 : _c.exitMs) || 0;\n    // Show/hide animation\n    React.useEffect(function() {\n        if (visualState === types_1.VisualState.showing) {\n            return;\n        }\n        var duration = visualState === types_1.VisualState.animatingIn ? enterMs : exitMs;\n        var element = outerRef.current;\n        element === null || element === void 0 ? void 0 : element.animate(appearanceAnimationKeyframes, {\n            duration: duration,\n            easing: // TODO: expose easing in options\n            visualState === types_1.VisualState.animatingOut ? \"ease-in\" : \"ease-out\",\n            direction: visualState === types_1.VisualState.animatingOut ? \"reverse\" : \"normal\",\n            fill: \"forwards\"\n        });\n    }, [\n        options,\n        visualState,\n        enterMs,\n        exitMs\n    ]);\n    // Height animation\n    var previousHeight = React.useRef();\n    React.useEffect(function() {\n        // Only animate if we're actually showing\n        if (visualState === types_1.VisualState.showing) {\n            var outer_1 = outerRef.current;\n            var inner_1 = innerRef.current;\n            if (!outer_1 || !inner_1) {\n                return;\n            }\n            var ro_1 = new ResizeObserver(function(entries) {\n                for(var _i = 0, entries_1 = entries; _i < entries_1.length; _i++){\n                    var entry = entries_1[_i];\n                    var cr = entry.contentRect;\n                    if (!previousHeight.current) {\n                        previousHeight.current = cr.height;\n                    }\n                    outer_1.animate([\n                        {\n                            height: previousHeight.current + \"px\"\n                        },\n                        {\n                            height: cr.height + \"px\"\n                        }\n                    ], {\n                        duration: enterMs / 2,\n                        // TODO: expose configs here\n                        easing: \"ease-out\",\n                        fill: \"forwards\"\n                    });\n                    previousHeight.current = cr.height;\n                }\n            });\n            ro_1.observe(inner_1);\n            return function() {\n                ro_1.unobserve(inner_1);\n            };\n        }\n    }, [\n        visualState,\n        options,\n        enterMs,\n        exitMs\n    ]);\n    // Bump animation between nested actions\n    var firstRender = React.useRef(true);\n    React.useEffect(function() {\n        if (firstRender.current) {\n            firstRender.current = false;\n            return;\n        }\n        var element = outerRef.current;\n        if (element) {\n            element.animate(bumpAnimationKeyframes, {\n                duration: enterMs,\n                easing: \"ease-out\"\n            });\n        }\n    }, [\n        currentRootActionId,\n        enterMs\n    ]);\n    (0, utils_1.useOuterClick)(outerRef, function() {\n        var _a, _b;\n        if (disableCloseOnOuterClick) {\n            return;\n        }\n        query.setVisualState(types_1.VisualState.animatingOut);\n        (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a);\n    });\n    return React.createElement(\"div\", {\n        ref: outerRef,\n        style: __assign(__assign(__assign({}, appearanceAnimationKeyframes[0]), style), {\n            pointerEvents: \"auto\"\n        }),\n        className: className\n    }, React.createElement(\"div\", {\n        ref: innerRef\n    }, children));\n};\nexports.KBarAnimator = KBarAnimator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhckFuaW1hdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsV0FBVyxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFFBQVEsSUFBSztJQUN0Q0EsV0FBV0MsT0FBT0MsTUFBTSxJQUFJLFNBQVNDLENBQUM7UUFDbEMsSUFBSyxJQUFJQyxHQUFHQyxJQUFJLEdBQUdDLElBQUlDLFVBQVVDLE1BQU0sRUFBRUgsSUFBSUMsR0FBR0QsSUFBSztZQUNqREQsSUFBSUcsU0FBUyxDQUFDRixFQUFFO1lBQ2hCLElBQUssSUFBSUksS0FBS0wsRUFBRyxJQUFJSCxPQUFPUyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUixHQUFHSyxJQUN6RE4sQ0FBQyxDQUFDTSxFQUFFLEdBQUdMLENBQUMsQ0FBQ0ssRUFBRTtRQUNuQjtRQUNBLE9BQU9OO0lBQ1g7SUFDQSxPQUFPSCxTQUFTYSxLQUFLLENBQUMsSUFBSSxFQUFFTjtBQUNoQztBQUNBLElBQUlPLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTWIsQ0FBQUEsT0FBT2MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JqQixPQUFPb0IsY0FBYyxDQUFDTCxHQUFHRyxJQUFJO1FBQUVHLFlBQVk7UUFBTUMsS0FBSztZQUFhLE9BQU9OLENBQUMsQ0FBQ0MsRUFBRTtRQUFFO0lBQUU7QUFDdEYsSUFBTSxTQUFTRixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJTSxxQkFBcUIsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFF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QUFRO1lBQUVpRCxlQUFlO1FBQU87UUFBSWhELFdBQVdBO0lBQVUsR0FDakxkLE1BQU00RCxhQUFhLENBQUMsT0FBTztRQUFFQyxLQUFLcEM7SUFBUyxHQUFHYjtBQUN0RDtBQUNBZCxvQkFBb0IsR0FBR0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZC1uZXh0anMtc3RhcnRlci1ibG9nLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL0tCYXJBbmltYXRvci5qcz8wZjdhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LQmFyQW5pbWF0b3IgPSB2b2lkIDA7XG52YXIgUmVhY3QgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcInJlYWN0XCIpKTtcbnZhciB0eXBlc18xID0gcmVxdWlyZShcIi4vdHlwZXNcIik7XG52YXIgdXNlS0Jhcl8xID0gcmVxdWlyZShcIi4vdXNlS0JhclwiKTtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG52YXIgYXBwZWFyYW5jZUFuaW1hdGlvbktleWZyYW1lcyA9IFtcbiAgICB7XG4gICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgIHRyYW5zZm9ybTogXCJzY2FsZSguOTkpXCIsXG4gICAgfSxcbiAgICB7IG9wYWNpdHk6IDEsIHRyYW5zZm9ybTogXCJzY2FsZSgxLjAxKVwiIH0sXG4gICAgeyBvcGFjaXR5OiAxLCB0cmFuc2Zvcm06IFwic2NhbGUoMSlcIiB9LFxuXTtcbnZhciBidW1wQW5pbWF0aW9uS2V5ZnJhbWVzID0gW1xuICAgIHtcbiAgICAgICAgdHJhbnNmb3JtOiBcInNjYWxlKDEpXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHRyYW5zZm9ybTogXCJzY2FsZSguOTgpXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHRyYW5zZm9ybTogXCJzY2FsZSgxKVwiLFxuICAgIH0sXG5dO1xudmFyIEtCYXJBbmltYXRvciA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBfYiwgX2M7XG4gICAgdmFyIGNoaWxkcmVuID0gX2EuY2hpbGRyZW4sIHN0eWxlID0gX2Euc3R5bGUsIGNsYXNzTmFtZSA9IF9hLmNsYXNzTmFtZSwgZGlzYWJsZUNsb3NlT25PdXRlckNsaWNrID0gX2EuZGlzYWJsZUNsb3NlT25PdXRlckNsaWNrO1xuICAgIHZhciBfZCA9ICgwLCB1c2VLQmFyXzEudXNlS0JhcikoZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiAoe1xuICAgICAgICB2aXN1YWxTdGF0ZTogc3RhdGUudmlzdWFsU3RhdGUsXG4gICAgICAgIGN1cnJlbnRSb290QWN0aW9uSWQ6IHN0YXRlLmN1cnJlbnRSb290QWN0aW9uSWQsXG4gICAgfSk7IH0pLCB2aXN1YWxTdGF0ZSA9IF9kLnZpc3VhbFN0YXRlLCBjdXJyZW50Um9vdEFjdGlvbklkID0gX2QuY3VycmVudFJvb3RBY3Rpb25JZCwgcXVlcnkgPSBfZC5xdWVyeSwgb3B0aW9ucyA9IF9kLm9wdGlvbnM7XG4gICAgdmFyIG91dGVyUmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICAgIHZhciBpbm5lclJlZiA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgICB2YXIgZW50ZXJNcyA9ICgoX2IgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYW5pbWF0aW9ucykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmVudGVyTXMpIHx8IDA7XG4gICAgdmFyIGV4aXRNcyA9ICgoX2MgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYW5pbWF0aW9ucykgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmV4aXRNcykgfHwgMDtcbiAgICAvLyBTaG93L2hpZGUgYW5pbWF0aW9uXG4gICAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHZpc3VhbFN0YXRlID09PSB0eXBlc18xLlZpc3VhbFN0YXRlLnNob3dpbmcpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZHVyYXRpb24gPSB2aXN1YWxTdGF0ZSA9PT0gdHlwZXNfMS5WaXN1YWxTdGF0ZS5hbmltYXRpbmdJbiA/IGVudGVyTXMgOiBleGl0TXM7XG4gICAgICAgIHZhciBlbGVtZW50ID0gb3V0ZXJSZWYuY3VycmVudDtcbiAgICAgICAgZWxlbWVudCA9PT0gbnVsbCB8fCBlbGVtZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlbGVtZW50LmFuaW1hdGUoYXBwZWFyYW5jZUFuaW1hdGlvbktleWZyYW1lcywge1xuICAgICAgICAgICAgZHVyYXRpb246IGR1cmF0aW9uLFxuICAgICAgICAgICAgZWFzaW5nOiBcbiAgICAgICAgICAgIC8vIFRPRE86IGV4cG9zZSBlYXNpbmcgaW4gb3B0aW9uc1xuICAgICAgICAgICAgdmlzdWFsU3RhdGUgPT09IHR5cGVzXzEuVmlzdWFsU3RhdGUuYW5pbWF0aW5nT3V0ID8gXCJlYXNlLWluXCIgOiBcImVhc2Utb3V0XCIsXG4gICAgICAgICAgICBkaXJlY3Rpb246IHZpc3VhbFN0YXRlID09PSB0eXBlc18xLlZpc3VhbFN0YXRlLmFuaW1hdGluZ091dCA/IFwicmV2ZXJzZVwiIDogXCJub3JtYWxcIixcbiAgICAgICAgICAgIGZpbGw6IFwiZm9yd2FyZHNcIixcbiAgICAgICAgfSk7XG4gICAgfSwgW29wdGlvbnMsIHZpc3VhbFN0YXRlLCBlbnRlck1zLCBleGl0TXNdKTtcbiAgICAvLyBIZWlnaHQgYW5pbWF0aW9uXG4gICAgdmFyIHByZXZpb3VzSGVpZ2h0ID0gUmVhY3QudXNlUmVmKCk7XG4gICAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gT25seSBhbmltYXRlIGlmIHdlJ3JlIGFjdHVhbGx5IHNob3dpbmdcbiAgICAgICAgaWYgKHZpc3VhbFN0YXRlID09PSB0eXBlc18xLlZpc3VhbFN0YXRlLnNob3dpbmcpIHtcbiAgICAgICAgICAgIHZhciBvdXRlcl8xID0gb3V0ZXJSZWYuY3VycmVudDtcbiAgICAgICAgICAgIHZhciBpbm5lcl8xID0gaW5uZXJSZWYuY3VycmVudDtcbiAgICAgICAgICAgIGlmICghb3V0ZXJfMSB8fCAhaW5uZXJfMSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciByb18xID0gbmV3IFJlc2l6ZU9ic2VydmVyKGZ1bmN0aW9uIChlbnRyaWVzKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBlbnRyaWVzXzEgPSBlbnRyaWVzOyBfaSA8IGVudHJpZXNfMS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVudHJ5ID0gZW50cmllc18xW19pXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNyID0gZW50cnkuY29udGVudFJlY3Q7XG4gICAgICAgICAgICAgICAgICAgIGlmICghcHJldmlvdXNIZWlnaHQuY3VycmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNIZWlnaHQuY3VycmVudCA9IGNyLmhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBvdXRlcl8xLmFuaW1hdGUoW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogcHJldmlvdXNIZWlnaHQuY3VycmVudCArIFwicHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBjci5oZWlnaHQgKyBcInB4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBdLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogZW50ZXJNcyAvIDIsXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBUT0RPOiBleHBvc2UgY29uZmlncyBoZXJlXG4gICAgICAgICAgICAgICAgICAgICAgICBlYXNpbmc6IFwiZWFzZS1vdXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw6IFwiZm9yd2FyZHNcIixcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHByZXZpb3VzSGVpZ2h0LmN1cnJlbnQgPSBjci5oZWlnaHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByb18xLm9ic2VydmUoaW5uZXJfMSk7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJvXzEudW5vYnNlcnZlKGlubmVyXzEpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH0sIFt2aXN1YWxTdGF0ZSwgb3B0aW9ucywgZW50ZXJNcywgZXhpdE1zXSk7XG4gICAgLy8gQnVtcCBhbmltYXRpb24gYmV0d2VlbiBuZXN0ZWQgYWN0aW9uc1xuICAgIHZhciBmaXJzdFJlbmRlciA9IFJlYWN0LnVzZVJlZih0cnVlKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoZmlyc3RSZW5kZXIuY3VycmVudCkge1xuICAgICAgICAgICAgZmlyc3RSZW5kZXIuY3VycmVudCA9IGZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBlbGVtZW50ID0gb3V0ZXJSZWYuY3VycmVudDtcbiAgICAgICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgICAgICAgIGVsZW1lbnQuYW5pbWF0ZShidW1wQW5pbWF0aW9uS2V5ZnJhbWVzLCB7XG4gICAgICAgICAgICAgICAgZHVyYXRpb246IGVudGVyTXMsXG4gICAgICAgICAgICAgICAgZWFzaW5nOiBcImVhc2Utb3V0XCIsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0sIFtjdXJyZW50Um9vdEFjdGlvbklkLCBlbnRlck1zXSk7XG4gICAgKDAsIHV0aWxzXzEudXNlT3V0ZXJDbGljaykob3V0ZXJSZWYsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgaWYgKGRpc2FibGVDbG9zZU9uT3V0ZXJDbGljaykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHF1ZXJ5LnNldFZpc3VhbFN0YXRlKHR5cGVzXzEuVmlzdWFsU3RhdGUuYW5pbWF0aW5nT3V0KTtcbiAgICAgICAgKF9iID0gKF9hID0gb3B0aW9ucy5jYWxsYmFja3MpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5vbkNsb3NlKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbChfYSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgcmVmOiBvdXRlclJlZiwgc3R5bGU6IF9fYXNzaWduKF9fYXNzaWduKF9fYXNzaWduKHt9LCBhcHBlYXJhbmNlQW5pbWF0aW9uS2V5ZnJhbWVzWzBdKSwgc3R5bGUpLCB7IHBvaW50ZXJFdmVudHM6IFwiYXV0b1wiIH0pLCBjbGFzc05hbWU6IGNsYXNzTmFtZSB9LFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgcmVmOiBpbm5lclJlZiB9LCBjaGlsZHJlbikpKTtcbn07XG5leHBvcnRzLktCYXJBbmltYXRvciA9IEtCYXJBbmltYXRvcjtcbiJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsIk9iamVjdCIsImFzc2lnbiIsInQiLCJzIiwiaSIsIm4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJfX2NyZWF0ZUJpbmRpbmciLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIl9fc2V0TW9kdWxlRGVmYXVsdCIsInYiLCJ2YWx1ZSIsIl9faW1wb3J0U3RhciIsIm1vZCIsIl9fZXNNb2R1bGUiLCJyZXN1bHQiLCJleHBvcnRzIiwiS0JhckFuaW1hdG9yIiwiUmVhY3QiLCJyZXF1aXJlIiwidHlwZXNfMSIsInVzZUtCYXJfMSIsInV0aWxzXzEiLCJhcHBlYXJhbmNlQW5pbWF0aW9uS2V5ZnJhbWVzIiwib3BhY2l0eSIsInRyYW5zZm9ybSIsImJ1bXBBbmltYXRpb25LZXlmcmFtZXMiLCJfYSIsIl9iIiwiX2MiLCJjaGlsZHJlbiIsInN0eWxlIiwiY2xhc3NOYW1lIiwiZGlzYWJsZUNsb3NlT25PdXRlckNsaWNrIiwiX2QiLCJ1c2VLQmFyIiwic3RhdGUiLCJ2aXN1YWxTdGF0ZSIsImN1cnJlbnRSb290QWN0aW9uSWQiLCJxdWVyeSIsIm9wdGlvbnMiLCJvdXRlclJlZiIsInVzZVJlZiIsImlubmVyUmVmIiwiZW50ZXJNcyIsImFuaW1hdGlvbnMiLCJleGl0TXMiLCJ1c2VFZmZlY3QiLCJWaXN1YWxTdGF0ZSIsInNob3dpbmciLCJkdXJhdGlvbiIsImFuaW1hdGluZ0luIiwiZWxlbWVudCIsImN1cnJlbnQiLCJhbmltYXRlIiwiZWFzaW5nIiwiYW5pbWF0aW5nT3V0IiwiZGlyZWN0aW9uIiwiZmlsbCIsInByZXZpb3VzSGVpZ2h0Iiwib3V0ZXJfMSIsImlubmVyXzEiLCJyb18xIiwiUmVzaXplT2JzZXJ2ZXIiLCJlbnRyaWVzIiwiX2kiLCJlbnRyaWVzXzEiLCJlbnRyeSIsImNyIiwiY29udGVudFJlY3QiLCJoZWlnaHQiLCJvYnNlcnZlIiwidW5vYnNlcnZlIiwiZmlyc3RSZW5kZXIiLCJ1c2VPdXRlckNsaWNrIiwic2V0VmlzdWFsU3RhdGUiLCJjYWxsYmFja3MiLCJvbkNsb3NlIiwiY3JlYXRlRWxlbWVudCIsInJlZiIsInBvaW50ZXJFdmVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarAnimator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarContextProvider.js":
/*!******************************************************!*\
  !*** ./node_modules/kbar/lib/KBarContextProvider.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarProvider = exports.KBarContext = void 0;\nvar useStore_1 = __webpack_require__(/*! ./useStore */ \"(ssr)/./node_modules/kbar/lib/useStore.js\");\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar InternalEvents_1 = __webpack_require__(/*! ./InternalEvents */ \"(ssr)/./node_modules/kbar/lib/InternalEvents.js\");\nexports.KBarContext = React.createContext({});\nvar KBarProvider = function(props) {\n    var contextValue = (0, useStore_1.useStore)(props);\n    return React.createElement(exports.KBarContext.Provider, {\n        value: contextValue\n    }, React.createElement(InternalEvents_1.InternalEvents, null), props.children);\n};\nexports.KBarProvider = KBarProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhckNvbnRleHRQcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JKLE9BQU9PLGNBQWMsQ0FBQ0wsR0FBR0csSUFBSTtRQUFFRyxZQUFZO1FBQU1DLEtBQUs7WUFBYSxPQUFPTixDQUFDLENBQUNDLEVBQUU7UUFBRTtJQUFFO0FBQ3RGLElBQU0sU0FBU0YsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSU0scUJBQXFCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsa0JBQWtCLElBQU1WLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVTLENBQUM7SUFDekZYLE9BQU9PLGNBQWMsQ0FBQ0wsR0FBRyxXQUFXO1FBQUVNLFlBQVk7UUFBTUksT0FBT0Q7SUFBRTtBQUNyRSxJQUFLLFNBQVNULENBQUMsRUFBRVMsQ0FBQztJQUNkVCxDQUFDLENBQUMsVUFBVSxHQUFHUztBQUNuQjtBQUNBLElBQUlFLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBVUMsR0FBRztJQUMzRCxJQUFJQSxPQUFPQSxJQUFJQyxVQUFVLEVBQUUsT0FBT0Q7SUFDbEMsSUFBSUUsU0FBUyxDQUFDO0lBQ2QsSUFBSUYsT0FBTyxNQUFNO1FBQUEsSUFBSyxJQUFJVixLQUFLVSxJQUFLLElBQUlWLE1BQU0sYUFBYUosT0FBT2lCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNMLEtBQUtWLElBQUlMLGdCQUFnQmlCLFFBQVFGLEtBQUtWO0lBQUU7SUFDeElNLG1CQUFtQk0sUUFBUUY7SUFDM0IsT0FBT0U7QUFDWDtBQUNBaEIsOENBQTZDO0lBQUVZLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RRLG9CQUFvQixHQUFHQSxtQkFBbUIsR0FBRyxLQUFLO0FBQ2xELElBQUlHLGFBQWFDLG1CQUFPQSxDQUFDLDZEQUFZO0FBQ3JDLElBQUlDLFFBQVFaLGFBQWFXLG1CQUFPQSxDQUFDLHdHQUFPO0FBQ3hDLElBQUlFLG1CQUFtQkYsbUJBQU9BLENBQUMseUVBQWtCO0FBQ2pESixtQkFBbUIsR0FBR0ssTUFBTUUsYUFBYSxDQUFDLENBQUM7QUFDM0MsSUFBSU4sZUFBZSxTQUFVTyxLQUFLO0lBQzlCLElBQUlDLGVBQWUsQ0FBQyxHQUFHTixXQUFXTyxRQUFRLEVBQUVGO0lBQzVDLE9BQVFILE1BQU1NLGFBQWEsQ0FBQ1gsUUFBUUUsV0FBVyxDQUFDVSxRQUFRLEVBQUU7UUFBRXBCLE9BQU9pQjtJQUFhLEdBQzVFSixNQUFNTSxhQUFhLENBQUNMLGlCQUFpQk8sY0FBYyxFQUFFLE9BQ3JETCxNQUFNTSxRQUFRO0FBQ3RCO0FBQ0FkLG9CQUFvQixHQUFHQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kLW5leHRqcy1zdGFydGVyLWJsb2cvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhckNvbnRleHRQcm92aWRlci5qcz9jYjQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktCYXJQcm92aWRlciA9IGV4cG9ydHMuS0JhckNvbnRleHQgPSB2b2lkIDA7XG52YXIgdXNlU3RvcmVfMSA9IHJlcXVpcmUoXCIuL3VzZVN0b3JlXCIpO1xudmFyIFJlYWN0ID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgSW50ZXJuYWxFdmVudHNfMSA9IHJlcXVpcmUoXCIuL0ludGVybmFsRXZlbnRzXCIpO1xuZXhwb3J0cy5LQmFyQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoe30pO1xudmFyIEtCYXJQcm92aWRlciA9IGZ1bmN0aW9uIChwcm9wcykge1xuICAgIHZhciBjb250ZXh0VmFsdWUgPSAoMCwgdXNlU3RvcmVfMS51c2VTdG9yZSkocHJvcHMpO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChleHBvcnRzLktCYXJDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBjb250ZXh0VmFsdWUgfSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChJbnRlcm5hbEV2ZW50c18xLkludGVybmFsRXZlbnRzLCBudWxsKSxcbiAgICAgICAgcHJvcHMuY2hpbGRyZW4pKTtcbn07XG5leHBvcnRzLktCYXJQcm92aWRlciA9IEtCYXJQcm92aWRlcjtcbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIl9fc2V0TW9kdWxlRGVmYXVsdCIsInYiLCJ2YWx1ZSIsIl9faW1wb3J0U3RhciIsIm1vZCIsIl9fZXNNb2R1bGUiLCJyZXN1bHQiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJleHBvcnRzIiwiS0JhclByb3ZpZGVyIiwiS0JhckNvbnRleHQiLCJ1c2VTdG9yZV8xIiwicmVxdWlyZSIsIlJlYWN0IiwiSW50ZXJuYWxFdmVudHNfMSIsImNyZWF0ZUNvbnRleHQiLCJwcm9wcyIsImNvbnRleHRWYWx1ZSIsInVzZVN0b3JlIiwiY3JlYXRlRWxlbWVudCIsIlByb3ZpZGVyIiwiSW50ZXJuYWxFdmVudHMiLCJjaGlsZHJlbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarContextProvider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarPortal.js":
/*!*********************************************!*\
  !*** ./node_modules/kbar/lib/KBarPortal.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarPortal = void 0;\nvar react_portal_1 = __webpack_require__(/*! @radix-ui/react-portal */ \"(ssr)/./node_modules/@radix-ui/react-portal/dist/index.js\");\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nfunction KBarPortal(_a) {\n    var children = _a.children, container = _a.container;\n    var showing = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            showing: state.visualState !== types_1.VisualState.hidden\n        };\n    }).showing;\n    if (!showing) {\n        return null;\n    }\n    return React.createElement(react_portal_1.Portal, {\n        container: container\n    }, children);\n}\nexports.KBarPortal = KBarPortal;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhclBvcnRhbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JKLE9BQU9PLGNBQWMsQ0FBQ0wsR0FBR0csSUFBSTtRQUFFRyxZQUFZO1FBQU1DLEtBQUs7WUFBYSxPQUFPTixDQUFDLENBQUNDLEVBQUU7UUFBRTtJQUFFO0FBQ3RGLElBQU0sU0FBU0YsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSU0scUJBQXFCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsa0JBQWtCLElBQU1WLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVTLENBQUM7SUFDekZYLE9BQU9PLGNBQWMsQ0FBQ0wsR0FBRyxXQUFXO1FBQUVNLFlBQVk7UUFBTUksT0FBT0Q7SUFBRTtBQUNyRSxJQUFLLFNBQVNULENBQUMsRUFBRVMsQ0FBQztJQUNkVCxDQUFDLENBQUMsVUFBVSxHQUFHUztBQUNuQjtBQUNBLElBQUlFLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBVUMsR0FBRztJQUMzRCxJQUFJQSxPQUFPQSxJQUFJQyxVQUFVLEVBQUUsT0FBT0Q7SUFDbEMsSUFBSUUsU0FBUyxDQUFDO0lBQ2QsSUFBSUYsT0FBTyxNQUFNO1FBQUEsSUFBSyxJQUFJVixLQUFLVSxJQUFLLElBQUlWLE1BQU0sYUFBYUosT0FBT2lCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNMLEtBQUtWLElBQUlMLGdCQUFnQmlCLFFBQVFGLEtBQUtWO0lBQUU7SUFDeElNLG1CQUFtQk0sUUFBUUY7SUFDM0IsT0FBT0U7QUFDWDtBQUNBaEIsOENBQTZDO0lBQUVZLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RRLGtCQUFrQixHQUFHLEtBQUs7QUFDMUIsSUFBSUUsaUJBQWlCQyxtQkFBT0EsQ0FBQyx5RkFBd0I7QUFDckQsSUFBSUMsUUFBUVgsYUFBYVUsbUJBQU9BLENBQUMsd0dBQU87QUFDeEMsSUFBSUUsVUFBVUYsbUJBQU9BLENBQUMsdURBQVM7QUFDL0IsSUFBSUcsWUFBWUgsbUJBQU9BLENBQUMsMkRBQVc7QUFDbkMsU0FBU0YsV0FBV00sRUFBRTtJQUNsQixJQUFJQyxXQUFXRCxHQUFHQyxRQUFRLEVBQUVDLFlBQVlGLEdBQUdFLFNBQVM7SUFDcEQsSUFBSUMsVUFBVSxDQUFDLEdBQUdKLFVBQVVLLE9BQU8sRUFBRSxTQUFVQyxLQUFLO1FBQUksT0FBUTtZQUM1REYsU0FBU0UsTUFBTUMsV0FBVyxLQUFLUixRQUFRUyxXQUFXLENBQUNDLE1BQU07UUFDN0Q7SUFBSSxHQUFHTCxPQUFPO0lBQ2QsSUFBSSxDQUFDQSxTQUFTO1FBQ1YsT0FBTztJQUNYO0lBQ0EsT0FBT04sTUFBTVksYUFBYSxDQUFDZCxlQUFlZSxNQUFNLEVBQUU7UUFBRVIsV0FBV0E7SUFBVSxHQUFHRDtBQUNoRjtBQUNBUixrQkFBa0IsR0FBR0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZC1uZXh0anMtc3RhcnRlci1ibG9nLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL0tCYXJQb3J0YWwuanM/NmM5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LQmFyUG9ydGFsID0gdm9pZCAwO1xudmFyIHJlYWN0X3BvcnRhbF8xID0gcmVxdWlyZShcIkByYWRpeC11aS9yZWFjdC1wb3J0YWxcIik7XG52YXIgUmVhY3QgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcInJlYWN0XCIpKTtcbnZhciB0eXBlc18xID0gcmVxdWlyZShcIi4vdHlwZXNcIik7XG52YXIgdXNlS0Jhcl8xID0gcmVxdWlyZShcIi4vdXNlS0JhclwiKTtcbmZ1bmN0aW9uIEtCYXJQb3J0YWwoX2EpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBfYS5jaGlsZHJlbiwgY29udGFpbmVyID0gX2EuY29udGFpbmVyO1xuICAgIHZhciBzaG93aW5nID0gKDAsIHVzZUtCYXJfMS51c2VLQmFyKShmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuICh7XG4gICAgICAgIHNob3dpbmc6IHN0YXRlLnZpc3VhbFN0YXRlICE9PSB0eXBlc18xLlZpc3VhbFN0YXRlLmhpZGRlbixcbiAgICB9KTsgfSkuc2hvd2luZztcbiAgICBpZiAoIXNob3dpbmcpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KHJlYWN0X3BvcnRhbF8xLlBvcnRhbCwgeyBjb250YWluZXI6IGNvbnRhaW5lciB9LCBjaGlsZHJlbik7XG59XG5leHBvcnRzLktCYXJQb3J0YWwgPSBLQmFyUG9ydGFsO1xuIl0sIm5hbWVzIjpbIl9fY3JlYXRlQmluZGluZyIsIk9iamVjdCIsImNyZWF0ZSIsIm8iLCJtIiwiayIsImsyIiwidW5kZWZpbmVkIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX19zZXRNb2R1bGVEZWZhdWx0IiwidiIsInZhbHVlIiwiX19pbXBvcnRTdGFyIiwibW9kIiwiX19lc01vZHVsZSIsInJlc3VsdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImV4cG9ydHMiLCJLQmFyUG9ydGFsIiwicmVhY3RfcG9ydGFsXzEiLCJyZXF1aXJlIiwiUmVhY3QiLCJ0eXBlc18xIiwidXNlS0Jhcl8xIiwiX2EiLCJjaGlsZHJlbiIsImNvbnRhaW5lciIsInNob3dpbmciLCJ1c2VLQmFyIiwic3RhdGUiLCJ2aXN1YWxTdGF0ZSIsIlZpc3VhbFN0YXRlIiwiaGlkZGVuIiwiY3JlYXRlRWxlbWVudCIsIlBvcnRhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarPortal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarPositioner.js":
/*!*************************************************!*\
  !*** ./node_modules/kbar/lib/KBarPositioner.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = (void 0) && (void 0).__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarPositioner = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar defaultStyle = {\n    position: \"fixed\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    inset: \"0px\",\n    padding: \"14vh 16px 16px\"\n};\nfunction getStyle(style) {\n    return style ? __assign(__assign({}, defaultStyle), style) : defaultStyle;\n}\nexports.KBarPositioner = React.forwardRef(function(_a, ref) {\n    var style = _a.style, children = _a.children, props = __rest(_a, [\n        \"style\",\n        \"children\"\n    ]);\n    return React.createElement(\"div\", __assign({\n        ref: ref,\n        style: getStyle(style)\n    }, props), children);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhclBvc2l0aW9uZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxXQUFXLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsUUFBUSxJQUFLO0lBQ3RDQSxXQUFXQyxPQUFPQyxNQUFNLElBQUksU0FBU0MsQ0FBQztRQUNsQyxJQUFLLElBQUlDLEdBQUdDLElBQUksR0FBR0MsSUFBSUMsVUFBVUMsTUFBTSxFQUFFSCxJQUFJQyxHQUFHRCxJQUFLO1lBQ2pERCxJQUFJRyxTQUFTLENBQUNGLEVBQUU7WUFDaEIsSUFBSyxJQUFJSSxLQUFLTCxFQUFHLElBQUlILE9BQU9TLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLElBQ3pETixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO1FBQ25CO1FBQ0EsT0FBT047SUFDWDtJQUNBLE9BQU9ILFNBQVNhLEtBQUssQ0FBQyxJQUFJLEVBQUVOO0FBQ2hDO0FBQ0EsSUFBSU8sa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNYixDQUFBQSxPQUFPYyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQmpCLE9BQU9vQixjQUFjLENBQUNMLEdBQUdHLElBQUk7UUFBRUcsWUFBWTtRQUFNQyxLQUFLO1lBQWEsT0FBT04sQ0FBQyxDQUFDQyxFQUFFO1FBQUU7SUFBRTtBQUN0RixJQUFNLFNBQVNGLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlNLHFCQUFxQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGtCQUFrQixJQUFNdkIsQ0FBQUEsT0FBT2MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRVMsQ0FBQztJQUN6RnhCLE9BQU9vQixjQUFjLENBQUNMLEdBQUcsV0FBVztRQUFFTSxZQUFZO1FBQU1JLE9BQU9EO0lBQUU7QUFDckUsSUFBSyxTQUFTVCxDQUFDLEVBQUVTLENBQUM7SUFDZFQsQ0FBQyxDQUFDLFVBQVUsR0FBR1M7QUFDbkI7QUFDQSxJQUFJRSxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVVDLEdBQUc7SUFDM0QsSUFBSUEsT0FBT0EsSUFBSUMsVUFBVSxFQUFFLE9BQU9EO0lBQ2xDLElBQUlFLFNBQVMsQ0FBQztJQUNkLElBQUlGLE9BQU8sTUFBTTtRQUFBLElBQUssSUFBSVYsS0FBS1UsSUFBSyxJQUFJVixNQUFNLGFBQWFqQixPQUFPUyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDZ0IsS0FBS1YsSUFBSUosZ0JBQWdCZ0IsUUFBUUYsS0FBS1Y7SUFBRTtJQUN4SU0sbUJBQW1CTSxRQUFRRjtJQUMzQixPQUFPRTtBQUNYO0FBQ0EsSUFBSUMsU0FBUyxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLE1BQU0sSUFBSyxTQUFVM0IsQ0FBQyxFQUFFNEIsQ0FBQztJQUNoRCxJQUFJN0IsSUFBSSxDQUFDO0lBQ1QsSUFBSyxJQUFJTSxLQUFLTCxFQUFHLElBQUlILE9BQU9TLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLE1BQU11QixFQUFFQyxPQUFPLENBQUN4QixLQUFLLEdBQzlFTixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO0lBQ2YsSUFBSUwsS0FBSyxRQUFRLE9BQU9ILE9BQU9pQyxxQkFBcUIsS0FBSyxZQUNyRCxJQUFLLElBQUk3QixJQUFJLEdBQUdJLElBQUlSLE9BQU9pQyxxQkFBcUIsQ0FBQzlCLElBQUlDLElBQUlJLEVBQUVELE1BQU0sRUFBRUgsSUFBSztRQUNwRSxJQUFJMkIsRUFBRUMsT0FBTyxDQUFDeEIsQ0FBQyxDQUFDSixFQUFFLElBQUksS0FBS0osT0FBT1MsU0FBUyxDQUFDeUIsb0JBQW9CLENBQUN2QixJQUFJLENBQUNSLEdBQUdLLENBQUMsQ0FBQ0osRUFBRSxHQUN6RUYsQ0FBQyxDQUFDTSxDQUFDLENBQUNKLEVBQUUsQ0FBQyxHQUFHRCxDQUFDLENBQUNLLENBQUMsQ0FBQ0osRUFBRSxDQUFDO0lBQ3pCO0lBQ0osT0FBT0Y7QUFDWDtBQUNBRiw4Q0FBNkM7SUFBRXlCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RVLHNCQUFzQixHQUFHLEtBQUs7QUFDOUIsSUFBSUUsUUFBUVgsYUFBYVksbUJBQU9BLENBQUMsd0dBQU87QUFDeEMsSUFBSUMsZUFBZTtJQUNmQyxVQUFVO0lBQ1ZDLFNBQVM7SUFDVEMsWUFBWTtJQUNaQyxnQkFBZ0I7SUFDaEJDLE9BQU87SUFDUEMsT0FBTztJQUNQQyxTQUFTO0FBQ2I7QUFDQSxTQUFTQyxTQUFTQyxLQUFLO0lBQ25CLE9BQU9BLFFBQVFqRCxTQUFTQSxTQUFTLENBQUMsR0FBR3dDLGVBQWVTLFNBQVNUO0FBQ2pFO0FBQ0FKLHNCQUFzQixHQUFHRSxNQUFNWSxVQUFVLENBQUMsU0FBVUMsRUFBRSxFQUFFQyxHQUFHO0lBQ3ZELElBQUlILFFBQVFFLEdBQUdGLEtBQUssRUFBRUksV0FBV0YsR0FBR0UsUUFBUSxFQUFFQyxRQUFRdkIsT0FBT29CLElBQUk7UUFBQztRQUFTO0tBQVc7SUFDdEYsT0FBUWIsTUFBTWlCLGFBQWEsQ0FBQyxPQUFPdkQsU0FBUztRQUFFb0QsS0FBS0E7UUFBS0gsT0FBT0QsU0FBU0M7SUFBTyxHQUFHSyxRQUFRRDtBQUM5RiIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kLW5leHRqcy1zdGFydGVyLWJsb2cvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvS0JhclBvc2l0aW9uZXIuanM/ZDk5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbnZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgICB2YXIgdCA9IHt9O1xuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxuICAgICAgICB0W3BdID0gc1twXTtcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcbiAgICAgICAgfVxuICAgIHJldHVybiB0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS0JhclBvc2l0aW9uZXIgPSB2b2lkIDA7XG52YXIgUmVhY3QgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcInJlYWN0XCIpKTtcbnZhciBkZWZhdWx0U3R5bGUgPSB7XG4gICAgcG9zaXRpb246IFwiZml4ZWRcIixcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBhbGlnbkl0ZW1zOiBcImZsZXgtc3RhcnRcIixcbiAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgaW5zZXQ6IFwiMHB4XCIsXG4gICAgcGFkZGluZzogXCIxNHZoIDE2cHggMTZweFwiLFxufTtcbmZ1bmN0aW9uIGdldFN0eWxlKHN0eWxlKSB7XG4gICAgcmV0dXJuIHN0eWxlID8gX19hc3NpZ24oX19hc3NpZ24oe30sIGRlZmF1bHRTdHlsZSksIHN0eWxlKSA6IGRlZmF1bHRTdHlsZTtcbn1cbmV4cG9ydHMuS0JhclBvc2l0aW9uZXIgPSBSZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIChfYSwgcmVmKSB7XG4gICAgdmFyIHN0eWxlID0gX2Euc3R5bGUsIGNoaWxkcmVuID0gX2EuY2hpbGRyZW4sIHByb3BzID0gX19yZXN0KF9hLCBbXCJzdHlsZVwiLCBcImNoaWxkcmVuXCJdKTtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgX19hc3NpZ24oeyByZWY6IHJlZiwgc3R5bGU6IGdldFN0eWxlKHN0eWxlKSB9LCBwcm9wcyksIGNoaWxkcmVuKSk7XG59KTtcbiJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsIk9iamVjdCIsImFzc2lnbiIsInQiLCJzIiwiaSIsIm4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJfX2NyZWF0ZUJpbmRpbmciLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIl9fc2V0TW9kdWxlRGVmYXVsdCIsInYiLCJ2YWx1ZSIsIl9faW1wb3J0U3RhciIsIm1vZCIsIl9fZXNNb2R1bGUiLCJyZXN1bHQiLCJfX3Jlc3QiLCJlIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiZXhwb3J0cyIsIktCYXJQb3NpdGlvbmVyIiwiUmVhY3QiLCJyZXF1aXJlIiwiZGVmYXVsdFN0eWxlIiwicG9zaXRpb24iLCJkaXNwbGF5IiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50Iiwid2lkdGgiLCJpbnNldCIsInBhZGRpbmciLCJnZXRTdHlsZSIsInN0eWxlIiwiZm9yd2FyZFJlZiIsIl9hIiwicmVmIiwiY2hpbGRyZW4iLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarPositioner.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarResults.js":
/*!**********************************************!*\
  !*** ./node_modules/kbar/lib/KBarResults.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarResults = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar react_virtual_1 = __webpack_require__(/*! react-virtual */ \"(ssr)/./node_modules/react-virtual/dist/react-virtual.mjs\");\nvar KBarSearch_1 = __webpack_require__(/*! ./KBarSearch */ \"(ssr)/./node_modules/kbar/lib/KBarSearch.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar START_INDEX = 0;\nvar KBarResults = function(props) {\n    var activeRef = React.useRef(null);\n    var parentRef = React.useRef(null);\n    // store a ref to all items so we do not have to pass\n    // them as a dependency when setting up event listeners.\n    var itemsRef = React.useRef(props.items);\n    itemsRef.current = props.items;\n    var rowVirtualizer = (0, react_virtual_1.useVirtual)({\n        size: itemsRef.current.length,\n        parentRef: parentRef\n    });\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            search: state.searchQuery,\n            currentRootActionId: state.currentRootActionId,\n            activeIndex: state.activeIndex\n        };\n    }), query = _a.query, search = _a.search, currentRootActionId = _a.currentRootActionId, activeIndex = _a.activeIndex, options = _a.options;\n    React.useEffect(function() {\n        var handler = function(event) {\n            var _a;\n            if (event.isComposing) {\n                return;\n            }\n            if (event.key === \"ArrowUp\" || event.ctrlKey && event.key === \"p\") {\n                event.preventDefault();\n                event.stopPropagation();\n                query.setActiveIndex(function(index) {\n                    var nextIndex = index > START_INDEX ? index - 1 : index;\n                    // avoid setting active index on a group\n                    if (typeof itemsRef.current[nextIndex] === \"string\") {\n                        if (nextIndex === 0) return index;\n                        nextIndex -= 1;\n                    }\n                    return nextIndex;\n                });\n            } else if (event.key === \"ArrowDown\" || event.ctrlKey && event.key === \"n\") {\n                event.preventDefault();\n                event.stopPropagation();\n                query.setActiveIndex(function(index) {\n                    var nextIndex = index < itemsRef.current.length - 1 ? index + 1 : index;\n                    // avoid setting active index on a group\n                    if (typeof itemsRef.current[nextIndex] === \"string\") {\n                        if (nextIndex === itemsRef.current.length - 1) return index;\n                        nextIndex += 1;\n                    }\n                    return nextIndex;\n                });\n            } else if (event.key === \"Enter\") {\n                event.preventDefault();\n                event.stopPropagation();\n                // storing the active dom element in a ref prevents us from\n                // having to calculate the current action to perform based\n                // on the `activeIndex`, which we would have needed to add\n                // as part of the dependencies array.\n                (_a = activeRef.current) === null || _a === void 0 ? void 0 : _a.click();\n            }\n        };\n        window.addEventListener(\"keydown\", handler, {\n            capture: true\n        });\n        return function() {\n            return window.removeEventListener(\"keydown\", handler, {\n                capture: true\n            });\n        };\n    }, [\n        query\n    ]);\n    // destructuring here to prevent linter warning to pass\n    // entire rowVirtualizer in the dependencies array.\n    var scrollToIndex = rowVirtualizer.scrollToIndex;\n    React.useEffect(function() {\n        scrollToIndex(activeIndex, {\n            // ensure that if the first item in the list is a group\n            // name and we are focused on the second item, to not\n            // scroll past that group, hiding it.\n            align: activeIndex <= 1 ? \"end\" : \"auto\"\n        });\n    }, [\n        activeIndex,\n        scrollToIndex\n    ]);\n    React.useEffect(function() {\n        // TODO(tim): fix scenario where async actions load in\n        // and active index is reset to the first item. i.e. when\n        // users register actions and bust the `useRegisterActions`\n        // cache, we won't want to reset their active index as they\n        // are navigating the list.\n        query.setActiveIndex(// avoid setting active index on a group\n        typeof props.items[START_INDEX] === \"string\" ? START_INDEX + 1 : START_INDEX);\n    }, [\n        search,\n        currentRootActionId,\n        props.items,\n        query\n    ]);\n    var execute = React.useCallback(function(item) {\n        var _a, _b;\n        if (typeof item === \"string\") return;\n        if (item.command) {\n            item.command.perform(item);\n            query.toggle();\n        } else {\n            query.setSearch(\"\");\n            query.setCurrentRootAction(item.id);\n        }\n        (_b = (_a = options.callbacks) === null || _a === void 0 ? void 0 : _a.onSelectAction) === null || _b === void 0 ? void 0 : _b.call(_a, item);\n    }, [\n        query,\n        options\n    ]);\n    var pointerMoved = (0, utils_1.usePointerMovedSinceMount)();\n    return React.createElement(\"div\", {\n        ref: parentRef,\n        style: {\n            maxHeight: props.maxHeight || 400,\n            position: \"relative\",\n            overflow: \"auto\"\n        }\n    }, React.createElement(\"div\", {\n        role: \"listbox\",\n        id: KBarSearch_1.KBAR_LISTBOX,\n        style: {\n            height: rowVirtualizer.totalSize + \"px\",\n            width: \"100%\"\n        }\n    }, rowVirtualizer.virtualItems.map(function(virtualRow) {\n        var item = itemsRef.current[virtualRow.index];\n        var handlers = typeof item !== \"string\" && {\n            onPointerMove: function() {\n                return pointerMoved && activeIndex !== virtualRow.index && query.setActiveIndex(virtualRow.index);\n            },\n            onPointerDown: function() {\n                return query.setActiveIndex(virtualRow.index);\n            },\n            onClick: function() {\n                return execute(item);\n            }\n        };\n        var active = virtualRow.index === activeIndex;\n        return React.createElement(\"div\", __assign({\n            ref: active ? activeRef : null,\n            id: (0, KBarSearch_1.getListboxItemId)(virtualRow.index),\n            role: \"option\",\n            \"aria-selected\": active,\n            key: virtualRow.index,\n            style: {\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                transform: \"translateY(\" + virtualRow.start + \"px)\"\n            }\n        }, handlers), React.cloneElement(props.onRender({\n            item: item,\n            active: active\n        }), {\n            ref: virtualRow.measureRef\n        }));\n    })));\n};\nexports.KBarResults = KBarResults;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarResults.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/KBarSearch.js":
/*!*********************************************!*\
  !*** ./node_modules/kbar/lib/KBarSearch.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = (void 0) && (void 0).__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KBarSearch = exports.getListboxItemId = exports.KBAR_LISTBOX = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nexports.KBAR_LISTBOX = \"kbar-listbox\";\nvar getListboxItemId = function(id) {\n    return \"kbar-listbox-item-\" + id;\n};\nexports.getListboxItemId = getListboxItemId;\nfunction KBarSearch(props) {\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            search: state.searchQuery,\n            currentRootActionId: state.currentRootActionId,\n            actions: state.actions,\n            activeIndex: state.activeIndex,\n            showing: state.visualState === types_1.VisualState.showing\n        };\n    }), query = _a.query, search = _a.search, actions = _a.actions, currentRootActionId = _a.currentRootActionId, activeIndex = _a.activeIndex, showing = _a.showing, options = _a.options;\n    var _b = React.useState(search), inputValue = _b[0], setInputValue = _b[1];\n    React.useEffect(function() {\n        query.setSearch(inputValue);\n    }, [\n        inputValue,\n        query\n    ]);\n    var defaultPlaceholder = props.defaultPlaceholder, rest = __rest(props, [\n        \"defaultPlaceholder\"\n    ]);\n    React.useEffect(function() {\n        query.setSearch(\"\");\n        query.getInput().focus();\n        return function() {\n            return query.setSearch(\"\");\n        };\n    }, [\n        currentRootActionId,\n        query\n    ]);\n    var placeholder = React.useMemo(function() {\n        var defaultText = defaultPlaceholder !== null && defaultPlaceholder !== void 0 ? defaultPlaceholder : \"Type a command or search…\";\n        return currentRootActionId && actions[currentRootActionId] ? actions[currentRootActionId].name : defaultText;\n    }, [\n        actions,\n        currentRootActionId,\n        defaultPlaceholder\n    ]);\n    return React.createElement(\"input\", __assign({}, rest, {\n        ref: query.inputRefSetter,\n        autoFocus: true,\n        autoComplete: \"off\",\n        role: \"combobox\",\n        spellCheck: \"false\",\n        \"aria-expanded\": showing,\n        \"aria-controls\": exports.KBAR_LISTBOX,\n        \"aria-activedescendant\": (0, exports.getListboxItemId)(activeIndex),\n        value: inputValue,\n        placeholder: placeholder,\n        onChange: function(event) {\n            var _a, _b, _c;\n            (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, event);\n            setInputValue(event.target.value);\n            (_c = (_b = options === null || options === void 0 ? void 0 : options.callbacks) === null || _b === void 0 ? void 0 : _b.onQueryChange) === null || _c === void 0 ? void 0 : _c.call(_b, event.target.value);\n        },\n        onKeyDown: function(event) {\n            var _a;\n            (_a = props.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(props, event);\n            if (currentRootActionId && !search && event.key === \"Backspace\") {\n                var parent_1 = actions[currentRootActionId].parent;\n                query.setCurrentRootAction(parent_1);\n            }\n        }\n    }));\n}\nexports.KBarSearch = KBarSearch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/KBarSearch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/ActionImpl.js":
/*!****************************************************!*\
  !*** ./node_modules/kbar/lib/action/ActionImpl.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ActionImpl = void 0;\nvar tiny_invariant_1 = __importDefault(__webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\"));\nvar Command_1 = __webpack_require__(/*! ./Command */ \"(ssr)/./node_modules/kbar/lib/action/Command.js\");\nvar utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\n/**\n * Extends the configured keywords to include the section\n * This allows section names to be searched for.\n */ var extendKeywords = function(_a) {\n    var _b = _a.keywords, keywords = _b === void 0 ? \"\" : _b, _c = _a.section, section = _c === void 0 ? \"\" : _c;\n    return (keywords + \" \" + (typeof section === \"string\" ? section : section.name)).trim();\n};\nvar ActionImpl = /** @class */ function() {\n    function ActionImpl(action, options) {\n        var _this = this;\n        var _a;\n        this.priority = utils_1.Priority.NORMAL;\n        this.ancestors = [];\n        this.children = [];\n        Object.assign(this, action);\n        this.id = action.id;\n        this.name = action.name;\n        this.keywords = extendKeywords(action);\n        var perform = action.perform;\n        this.command = perform && new Command_1.Command({\n            perform: function() {\n                return perform(_this);\n            }\n        }, {\n            history: options.history\n        });\n        // Backwards compatibility\n        this.perform = (_a = this.command) === null || _a === void 0 ? void 0 : _a.perform;\n        if (action.parent) {\n            var parentActionImpl = options.store[action.parent];\n            (0, tiny_invariant_1.default)(parentActionImpl, \"attempted to create an action whos parent: \" + action.parent + \" does not exist in the store.\");\n            parentActionImpl.addChild(this);\n        }\n    }\n    ActionImpl.prototype.addChild = function(childActionImpl) {\n        // add all ancestors for the child action\n        childActionImpl.ancestors.unshift(this);\n        var parent = this.parentActionImpl;\n        while(parent){\n            childActionImpl.ancestors.unshift(parent);\n            parent = parent.parentActionImpl;\n        }\n        // we ensure that order of adding always goes\n        // parent -> children, so no need to recurse\n        this.children.push(childActionImpl);\n    };\n    ActionImpl.prototype.removeChild = function(actionImpl) {\n        var _this = this;\n        // recursively remove all children\n        var index = this.children.indexOf(actionImpl);\n        if (index !== -1) {\n            this.children.splice(index, 1);\n        }\n        if (actionImpl.children) {\n            actionImpl.children.forEach(function(child) {\n                _this.removeChild(child);\n            });\n        }\n    };\n    Object.defineProperty(ActionImpl.prototype, \"parentActionImpl\", {\n        // easily access parentActionImpl after creation\n        get: function() {\n            return this.ancestors[this.ancestors.length - 1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ActionImpl.create = function(action, options) {\n        return new ActionImpl(action, options);\n    };\n    return ActionImpl;\n}();\nexports.ActionImpl = ActionImpl;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/ActionImpl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/ActionInterface.js":
/*!*********************************************************!*\
  !*** ./node_modules/kbar/lib/action/ActionInterface.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ActionInterface = void 0;\nvar tiny_invariant_1 = __importDefault(__webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\"));\nvar ActionImpl_1 = __webpack_require__(/*! ./ActionImpl */ \"(ssr)/./node_modules/kbar/lib/action/ActionImpl.js\");\nvar ActionInterface = /** @class */ function() {\n    function ActionInterface(actions, options) {\n        if (actions === void 0) {\n            actions = [];\n        }\n        if (options === void 0) {\n            options = {};\n        }\n        this.actions = {};\n        this.options = options;\n        this.add(actions);\n    }\n    ActionInterface.prototype.add = function(actions) {\n        for(var i = 0; i < actions.length; i++){\n            var action = actions[i];\n            if (action.parent) {\n                (0, tiny_invariant_1.default)(this.actions[action.parent], 'Attempted to create action \"' + action.name + '\" without registering its parent \"' + action.parent + '\" first.');\n            }\n            this.actions[action.id] = ActionImpl_1.ActionImpl.create(action, {\n                history: this.options.historyManager,\n                store: this.actions\n            });\n        }\n        return __assign({}, this.actions);\n    };\n    ActionInterface.prototype.remove = function(actions) {\n        var _this = this;\n        actions.forEach(function(action) {\n            var actionImpl = _this.actions[action.id];\n            if (!actionImpl) return;\n            var children = actionImpl.children;\n            while(children.length){\n                var child = children.pop();\n                if (!child) return;\n                delete _this.actions[child.id];\n                if (child.parentActionImpl) child.parentActionImpl.removeChild(child);\n                if (child.children) children.push.apply(children, child.children);\n            }\n            if (actionImpl.parentActionImpl) {\n                actionImpl.parentActionImpl.removeChild(actionImpl);\n            }\n            delete _this.actions[action.id];\n        });\n        return __assign({}, this.actions);\n    };\n    return ActionInterface;\n}();\nexports.ActionInterface = ActionInterface;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0FjdGlvbkludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLFdBQVcsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxRQUFRLElBQUs7SUFDdENBLFdBQVdDLE9BQU9DLE1BQU0sSUFBSSxTQUFTQyxDQUFDO1FBQ2xDLElBQUssSUFBSUMsR0FBR0MsSUFBSSxHQUFHQyxJQUFJQyxVQUFVQyxNQUFNLEVBQUVILElBQUlDLEdBQUdELElBQUs7WUFDakRELElBQUlHLFNBQVMsQ0FBQ0YsRUFBRTtZQUNoQixJQUFLLElBQUlJLEtBQUtMLEVBQUcsSUFBSUgsT0FBT1MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1IsR0FBR0ssSUFDekROLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7UUFDbkI7UUFDQSxPQUFPTjtJQUNYO0lBQ0EsT0FBT0gsU0FBU2EsS0FBSyxDQUFDLElBQUksRUFBRU47QUFDaEM7QUFDQSxJQUFJTyxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQUssU0FBVUMsR0FBRztJQUNqRSxPQUFPLE9BQVFBLElBQUlDLFVBQVUsR0FBSUQsTUFBTTtRQUFFLFdBQVdBO0lBQUk7QUFDNUQ7QUFDQWQsOENBQTZDO0lBQUVrQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx1QkFBdUIsR0FBRyxLQUFLO0FBQy9CLElBQUlHLG1CQUFtQlAsZ0JBQWdCUSxtQkFBT0EsQ0FBQyxzRkFBZ0I7QUFDL0QsSUFBSUMsZUFBZUQsbUJBQU9BLENBQUMsd0VBQWM7QUFDekMsSUFBSUYsa0JBQWtCLFdBQVcsR0FBSTtJQUNqQyxTQUFTQSxnQkFBZ0JJLE9BQU8sRUFBRUMsT0FBTztRQUNyQyxJQUFJRCxZQUFZLEtBQUssR0FBRztZQUFFQSxVQUFVLEVBQUU7UUFBRTtRQUN4QyxJQUFJQyxZQUFZLEtBQUssR0FBRztZQUFFQSxVQUFVLENBQUM7UUFBRztRQUN4QyxJQUFJLENBQUNELE9BQU8sR0FBRyxDQUFDO1FBQ2hCLElBQUksQ0FBQ0MsT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ0MsR0FBRyxDQUFDRjtJQUNiO0lBQ0FKLGdCQUFnQlYsU0FBUyxDQUFDZ0IsR0FBRyxHQUFHLFNBQVVGLE9BQU87UUFDN0MsSUFBSyxJQUFJbkIsSUFBSSxHQUFHQSxJQUFJbUIsUUFBUWhCLE1BQU0sRUFBRUgsSUFBSztZQUNyQyxJQUFJc0IsU0FBU0gsT0FBTyxDQUFDbkIsRUFBRTtZQUN2QixJQUFJc0IsT0FBT0MsTUFBTSxFQUFFO2dCQUNkLElBQUdQLGlCQUFpQlEsT0FBTyxFQUFFLElBQUksQ0FBQ0wsT0FBTyxDQUFDRyxPQUFPQyxNQUFNLENBQUMsRUFBRSxpQ0FBa0NELE9BQU9HLElBQUksR0FBRyx1Q0FBeUNILE9BQU9DLE1BQU0sR0FBRztZQUN4SztZQUNBLElBQUksQ0FBQ0osT0FBTyxDQUFDRyxPQUFPSSxFQUFFLENBQUMsR0FBR1IsYUFBYVMsVUFBVSxDQUFDQyxNQUFNLENBQUNOLFFBQVE7Z0JBQzdETyxTQUFTLElBQUksQ0FBQ1QsT0FBTyxDQUFDVSxjQUFjO2dCQUNwQ0MsT0FBTyxJQUFJLENBQUNaLE9BQU87WUFDdkI7UUFDSjtRQUNBLE9BQU94QixTQUFTLENBQUMsR0FBRyxJQUFJLENBQUN3QixPQUFPO0lBQ3BDO0lBQ0FKLGdCQUFnQlYsU0FBUyxDQUFDMkIsTUFBTSxHQUFHLFNBQVViLE9BQU87UUFDaEQsSUFBSWMsUUFBUSxJQUFJO1FBQ2hCZCxRQUFRZSxPQUFPLENBQUMsU0FBVVosTUFBTTtZQUM1QixJQUFJYSxhQUFhRixNQUFNZCxPQUFPLENBQUNHLE9BQU9JLEVBQUUsQ0FBQztZQUN6QyxJQUFJLENBQUNTLFlBQ0Q7WUFDSixJQUFJQyxXQUFXRCxXQUFXQyxRQUFRO1lBQ2xDLE1BQU9BLFNBQVNqQyxNQUFNLENBQUU7Z0JBQ3BCLElBQUlrQyxRQUFRRCxTQUFTRSxHQUFHO2dCQUN4QixJQUFJLENBQUNELE9BQ0Q7Z0JBQ0osT0FBT0osTUFBTWQsT0FBTyxDQUFDa0IsTUFBTVgsRUFBRSxDQUFDO2dCQUM5QixJQUFJVyxNQUFNRSxnQkFBZ0IsRUFDdEJGLE1BQU1FLGdCQUFnQixDQUFDQyxXQUFXLENBQUNIO2dCQUN2QyxJQUFJQSxNQUFNRCxRQUFRLEVBQ2RBLFNBQVNLLElBQUksQ0FBQ2pDLEtBQUssQ0FBQzRCLFVBQVVDLE1BQU1ELFFBQVE7WUFDcEQ7WUFDQSxJQUFJRCxXQUFXSSxnQkFBZ0IsRUFBRTtnQkFDN0JKLFdBQVdJLGdCQUFnQixDQUFDQyxXQUFXLENBQUNMO1lBQzVDO1lBQ0EsT0FBT0YsTUFBTWQsT0FBTyxDQUFDRyxPQUFPSSxFQUFFLENBQUM7UUFDbkM7UUFDQSxPQUFPL0IsU0FBUyxDQUFDLEdBQUcsSUFBSSxDQUFDd0IsT0FBTztJQUNwQztJQUNBLE9BQU9KO0FBQ1g7QUFDQUYsdUJBQXVCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmQtbmV4dGpzLXN0YXJ0ZXItYmxvZy8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi9hY3Rpb24vQWN0aW9uSW50ZXJmYWNlLmpzP2RjN2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BY3Rpb25JbnRlcmZhY2UgPSB2b2lkIDA7XG52YXIgdGlueV9pbnZhcmlhbnRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwidGlueS1pbnZhcmlhbnRcIikpO1xudmFyIEFjdGlvbkltcGxfMSA9IHJlcXVpcmUoXCIuL0FjdGlvbkltcGxcIik7XG52YXIgQWN0aW9uSW50ZXJmYWNlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEFjdGlvbkludGVyZmFjZShhY3Rpb25zLCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChhY3Rpb25zID09PSB2b2lkIDApIHsgYWN0aW9ucyA9IFtdOyB9XG4gICAgICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgICAgIHRoaXMuYWN0aW9ucyA9IHt9O1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICB0aGlzLmFkZChhY3Rpb25zKTtcbiAgICB9XG4gICAgQWN0aW9uSW50ZXJmYWNlLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiAoYWN0aW9ucykge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFjdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBhY3Rpb24gPSBhY3Rpb25zW2ldO1xuICAgICAgICAgICAgaWYgKGFjdGlvbi5wYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAoMCwgdGlueV9pbnZhcmlhbnRfMS5kZWZhdWx0KSh0aGlzLmFjdGlvbnNbYWN0aW9uLnBhcmVudF0sIFwiQXR0ZW1wdGVkIHRvIGNyZWF0ZSBhY3Rpb24gXFxcIlwiICsgYWN0aW9uLm5hbWUgKyBcIlxcXCIgd2l0aG91dCByZWdpc3RlcmluZyBpdHMgcGFyZW50IFxcXCJcIiArIGFjdGlvbi5wYXJlbnQgKyBcIlxcXCIgZmlyc3QuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5hY3Rpb25zW2FjdGlvbi5pZF0gPSBBY3Rpb25JbXBsXzEuQWN0aW9uSW1wbC5jcmVhdGUoYWN0aW9uLCB7XG4gICAgICAgICAgICAgICAgaGlzdG9yeTogdGhpcy5vcHRpb25zLmhpc3RvcnlNYW5hZ2VyLFxuICAgICAgICAgICAgICAgIHN0b3JlOiB0aGlzLmFjdGlvbnMsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX19hc3NpZ24oe30sIHRoaXMuYWN0aW9ucyk7XG4gICAgfTtcbiAgICBBY3Rpb25JbnRlcmZhY2UucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uIChhY3Rpb25zKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGFjdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoYWN0aW9uKSB7XG4gICAgICAgICAgICB2YXIgYWN0aW9uSW1wbCA9IF90aGlzLmFjdGlvbnNbYWN0aW9uLmlkXTtcbiAgICAgICAgICAgIGlmICghYWN0aW9uSW1wbClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB2YXIgY2hpbGRyZW4gPSBhY3Rpb25JbXBsLmNoaWxkcmVuO1xuICAgICAgICAgICAgd2hpbGUgKGNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHZhciBjaGlsZCA9IGNoaWxkcmVuLnBvcCgpO1xuICAgICAgICAgICAgICAgIGlmICghY2hpbGQpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICBkZWxldGUgX3RoaXMuYWN0aW9uc1tjaGlsZC5pZF07XG4gICAgICAgICAgICAgICAgaWYgKGNoaWxkLnBhcmVudEFjdGlvbkltcGwpXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkLnBhcmVudEFjdGlvbkltcGwucmVtb3ZlQ2hpbGQoY2hpbGQpO1xuICAgICAgICAgICAgICAgIGlmIChjaGlsZC5jaGlsZHJlbilcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW4ucHVzaC5hcHBseShjaGlsZHJlbiwgY2hpbGQuY2hpbGRyZW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGFjdGlvbkltcGwucGFyZW50QWN0aW9uSW1wbCkge1xuICAgICAgICAgICAgICAgIGFjdGlvbkltcGwucGFyZW50QWN0aW9uSW1wbC5yZW1vdmVDaGlsZChhY3Rpb25JbXBsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRlbGV0ZSBfdGhpcy5hY3Rpb25zW2FjdGlvbi5pZF07XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gX19hc3NpZ24oe30sIHRoaXMuYWN0aW9ucyk7XG4gICAgfTtcbiAgICByZXR1cm4gQWN0aW9uSW50ZXJmYWNlO1xufSgpKTtcbmV4cG9ydHMuQWN0aW9uSW50ZXJmYWNlID0gQWN0aW9uSW50ZXJmYWNlO1xuIl0sIm5hbWVzIjpbIl9fYXNzaWduIiwiT2JqZWN0IiwiYXNzaWduIiwidCIsInMiLCJpIiwibiIsImFyZ3VtZW50cyIsImxlbmd0aCIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsIl9faW1wb3J0RGVmYXVsdCIsIm1vZCIsIl9fZXNNb2R1bGUiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkFjdGlvbkludGVyZmFjZSIsInRpbnlfaW52YXJpYW50XzEiLCJyZXF1aXJlIiwiQWN0aW9uSW1wbF8xIiwiYWN0aW9ucyIsIm9wdGlvbnMiLCJhZGQiLCJhY3Rpb24iLCJwYXJlbnQiLCJkZWZhdWx0IiwibmFtZSIsImlkIiwiQWN0aW9uSW1wbCIsImNyZWF0ZSIsImhpc3RvcnkiLCJoaXN0b3J5TWFuYWdlciIsInN0b3JlIiwicmVtb3ZlIiwiX3RoaXMiLCJmb3JFYWNoIiwiYWN0aW9uSW1wbCIsImNoaWxkcmVuIiwiY2hpbGQiLCJwb3AiLCJwYXJlbnRBY3Rpb25JbXBsIiwicmVtb3ZlQ2hpbGQiLCJwdXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/ActionInterface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/Command.js":
/*!*************************************************!*\
  !*** ./node_modules/kbar/lib/action/Command.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Command = void 0;\nvar Command = /** @class */ function() {\n    function Command(command, options) {\n        var _this = this;\n        if (options === void 0) {\n            options = {};\n        }\n        this.perform = function() {\n            var negate = command.perform();\n            // no need for history if non negatable\n            if (typeof negate !== \"function\") return;\n            // return if no history enabled\n            var history = options.history;\n            if (!history) return;\n            // since we are performing the same action, we'll clean up the\n            // previous call to the action and create a new history record\n            if (_this.historyItem) {\n                history.remove(_this.historyItem);\n            }\n            _this.historyItem = history.add({\n                perform: command.perform,\n                negate: negate\n            });\n            _this.history = {\n                undo: function() {\n                    return history.undo(_this.historyItem);\n                },\n                redo: function() {\n                    return history.redo(_this.historyItem);\n                }\n            };\n        };\n    }\n    return Command;\n}();\nexports.Command = Command;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL0NvbW1hbmQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGVBQWUsR0FBRyxLQUFLO0FBQ3ZCLElBQUlFLFVBQVUsV0FBVyxHQUFJO0lBQ3pCLFNBQVNBLFFBQVFDLE9BQU8sRUFBRUMsT0FBTztRQUM3QixJQUFJQyxRQUFRLElBQUk7UUFDaEIsSUFBSUQsWUFBWSxLQUFLLEdBQUc7WUFBRUEsVUFBVSxDQUFDO1FBQUc7UUFDeEMsSUFBSSxDQUFDRSxPQUFPLEdBQUc7WUFDWCxJQUFJQyxTQUFTSixRQUFRRyxPQUFPO1lBQzVCLHVDQUF1QztZQUN2QyxJQUFJLE9BQU9DLFdBQVcsWUFDbEI7WUFDSiwrQkFBK0I7WUFDL0IsSUFBSUMsVUFBVUosUUFBUUksT0FBTztZQUM3QixJQUFJLENBQUNBLFNBQ0Q7WUFDSiw4REFBOEQ7WUFDOUQsOERBQThEO1lBQzlELElBQUlILE1BQU1JLFdBQVcsRUFBRTtnQkFDbkJELFFBQVFFLE1BQU0sQ0FBQ0wsTUFBTUksV0FBVztZQUNwQztZQUNBSixNQUFNSSxXQUFXLEdBQUdELFFBQVFHLEdBQUcsQ0FBQztnQkFDNUJMLFNBQVNILFFBQVFHLE9BQU87Z0JBQ3hCQyxRQUFRQTtZQUNaO1lBQ0FGLE1BQU1HLE9BQU8sR0FBRztnQkFDWkksTUFBTTtvQkFBYyxPQUFPSixRQUFRSSxJQUFJLENBQUNQLE1BQU1JLFdBQVc7Z0JBQUc7Z0JBQzVESSxNQUFNO29CQUFjLE9BQU9MLFFBQVFLLElBQUksQ0FBQ1IsTUFBTUksV0FBVztnQkFBRztZQUNoRTtRQUNKO0lBQ0o7SUFDQSxPQUFPUDtBQUNYO0FBQ0FGLGVBQWUsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZC1uZXh0anMtc3RhcnRlci1ibG9nLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL2FjdGlvbi9Db21tYW5kLmpzPzMxZjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbW1hbmQgPSB2b2lkIDA7XG52YXIgQ29tbWFuZCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDb21tYW5kKGNvbW1hbmQsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICAgICAgdGhpcy5wZXJmb3JtID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIG5lZ2F0ZSA9IGNvbW1hbmQucGVyZm9ybSgpO1xuICAgICAgICAgICAgLy8gbm8gbmVlZCBmb3IgaGlzdG9yeSBpZiBub24gbmVnYXRhYmxlXG4gICAgICAgICAgICBpZiAodHlwZW9mIG5lZ2F0ZSAhPT0gXCJmdW5jdGlvblwiKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIC8vIHJldHVybiBpZiBubyBoaXN0b3J5IGVuYWJsZWRcbiAgICAgICAgICAgIHZhciBoaXN0b3J5ID0gb3B0aW9ucy5oaXN0b3J5O1xuICAgICAgICAgICAgaWYgKCFoaXN0b3J5KVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIC8vIHNpbmNlIHdlIGFyZSBwZXJmb3JtaW5nIHRoZSBzYW1lIGFjdGlvbiwgd2UnbGwgY2xlYW4gdXAgdGhlXG4gICAgICAgICAgICAvLyBwcmV2aW91cyBjYWxsIHRvIHRoZSBhY3Rpb24gYW5kIGNyZWF0ZSBhIG5ldyBoaXN0b3J5IHJlY29yZFxuICAgICAgICAgICAgaWYgKF90aGlzLmhpc3RvcnlJdGVtKSB7XG4gICAgICAgICAgICAgICAgaGlzdG9yeS5yZW1vdmUoX3RoaXMuaGlzdG9yeUl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3RoaXMuaGlzdG9yeUl0ZW0gPSBoaXN0b3J5LmFkZCh7XG4gICAgICAgICAgICAgICAgcGVyZm9ybTogY29tbWFuZC5wZXJmb3JtLFxuICAgICAgICAgICAgICAgIG5lZ2F0ZTogbmVnYXRlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBfdGhpcy5oaXN0b3J5ID0ge1xuICAgICAgICAgICAgICAgIHVuZG86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGhpc3RvcnkudW5kbyhfdGhpcy5oaXN0b3J5SXRlbSk7IH0sXG4gICAgICAgICAgICAgICAgcmVkbzogZnVuY3Rpb24gKCkgeyByZXR1cm4gaGlzdG9yeS5yZWRvKF90aGlzLmhpc3RvcnlJdGVtKTsgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBDb21tYW5kO1xufSgpKTtcbmV4cG9ydHMuQ29tbWFuZCA9IENvbW1hbmQ7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDb21tYW5kIiwiY29tbWFuZCIsIm9wdGlvbnMiLCJfdGhpcyIsInBlcmZvcm0iLCJuZWdhdGUiLCJoaXN0b3J5IiwiaGlzdG9yeUl0ZW0iLCJyZW1vdmUiLCJhZGQiLCJ1bmRvIiwicmVkbyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/Command.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/HistoryImpl.js":
/*!*****************************************************!*\
  !*** ./node_modules/kbar/lib/action/HistoryImpl.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.history = exports.HistoryItemImpl = void 0;\nvar utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar HistoryItemImpl = /** @class */ function() {\n    function HistoryItemImpl(item) {\n        this.perform = item.perform;\n        this.negate = item.negate;\n    }\n    HistoryItemImpl.create = function(item) {\n        return new HistoryItemImpl(item);\n    };\n    return HistoryItemImpl;\n}();\nexports.HistoryItemImpl = HistoryItemImpl;\nvar HistoryImpl = /** @class */ function() {\n    function HistoryImpl() {\n        this.undoStack = [];\n        this.redoStack = [];\n        if (!HistoryImpl.instance) {\n            HistoryImpl.instance = this;\n            this.init();\n        }\n        return HistoryImpl.instance;\n    }\n    HistoryImpl.prototype.init = function() {\n        var _this = this;\n        if (true) return;\n        window.addEventListener(\"keydown\", function(event) {\n            var _a;\n            if (!_this.redoStack.length && !_this.undoStack.length || (0, utils_1.shouldRejectKeystrokes)()) {\n                return;\n            }\n            var key = (_a = event.key) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n            if (event.metaKey && key === \"z\" && event.shiftKey) {\n                _this.redo();\n            } else if (event.metaKey && key === \"z\") {\n                _this.undo();\n            }\n        });\n    };\n    HistoryImpl.prototype.add = function(item) {\n        var historyItem = HistoryItemImpl.create(item);\n        this.undoStack.push(historyItem);\n        return historyItem;\n    };\n    HistoryImpl.prototype.remove = function(item) {\n        var undoIndex = this.undoStack.findIndex(function(i) {\n            return i === item;\n        });\n        if (undoIndex !== -1) {\n            this.undoStack.splice(undoIndex, 1);\n            return;\n        }\n        var redoIndex = this.redoStack.findIndex(function(i) {\n            return i === item;\n        });\n        if (redoIndex !== -1) {\n            this.redoStack.splice(redoIndex, 1);\n        }\n    };\n    HistoryImpl.prototype.undo = function(item) {\n        // if not undoing a specific item, just undo the latest\n        if (!item) {\n            var item_1 = this.undoStack.pop();\n            if (!item_1) return;\n            item_1 === null || item_1 === void 0 ? void 0 : item_1.negate();\n            this.redoStack.push(item_1);\n            return item_1;\n        }\n        // else undo the specific item\n        var index = this.undoStack.findIndex(function(i) {\n            return i === item;\n        });\n        if (index === -1) return;\n        this.undoStack.splice(index, 1);\n        item.negate();\n        this.redoStack.push(item);\n        return item;\n    };\n    HistoryImpl.prototype.redo = function(item) {\n        if (!item) {\n            var item_2 = this.redoStack.pop();\n            if (!item_2) return;\n            item_2 === null || item_2 === void 0 ? void 0 : item_2.perform();\n            this.undoStack.push(item_2);\n            return item_2;\n        }\n        var index = this.redoStack.findIndex(function(i) {\n            return i === item;\n        });\n        if (index === -1) return;\n        this.redoStack.splice(index, 1);\n        item.perform();\n        this.undoStack.push(item);\n        return item;\n    };\n    HistoryImpl.prototype.reset = function() {\n        this.undoStack.splice(0);\n        this.redoStack.splice(0);\n    };\n    return HistoryImpl;\n}();\nvar history = new HistoryImpl();\nexports.history = history;\nObject.freeze(history);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/HistoryImpl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/action/index.js":
/*!***********************************************!*\
  !*** ./node_modules/kbar/lib/action/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./ActionInterface */ \"(ssr)/./node_modules/kbar/lib/action/ActionInterface.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ActionImpl */ \"(ssr)/./node_modules/kbar/lib/action/ActionImpl.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvYWN0aW9uL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkosT0FBT08sY0FBYyxDQUFDTCxHQUFHRyxJQUFJO1FBQUVHLFlBQVk7UUFBTUMsS0FBSztZQUFhLE9BQU9OLENBQUMsQ0FBQ0MsRUFBRTtRQUFFO0lBQUU7QUFDdEYsSUFBTSxTQUFTRixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJTSxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVNQLENBQUMsRUFBRVEsUUFBTztJQUNqRSxJQUFLLElBQUlDLEtBQUtULEVBQUcsSUFBSVMsTUFBTSxhQUFhLENBQUNaLE9BQU9hLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLFVBQVNDLElBQUliLGdCQUFnQlksVUFBU1IsR0FBR1M7QUFDM0g7QUFDQVosOENBQTZDO0lBQUVnQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdETixhQUFhTyxtQkFBT0EsQ0FBQyxrRkFBbUIsR0FBR047QUFDM0NELGFBQWFPLG1CQUFPQSxDQUFDLHdFQUFjLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmQtbmV4dGpzLXN0YXJ0ZXItYmxvZy8uL25vZGVfbW9kdWxlcy9rYmFyL2xpYi9hY3Rpb24vaW5kZXguanM/NjdhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0FjdGlvbkludGVyZmFjZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQWN0aW9uSW1wbFwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJfX2V4cG9ydFN0YXIiLCJleHBvcnRzIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInZhbHVlIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/action/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/index.js":
/*!****************************************!*\
  !*** ./node_modules/kbar/lib/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Priority = exports.createAction = void 0;\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nObject.defineProperty(exports, \"createAction\", ({\n    enumerable: true,\n    get: function() {\n        return utils_1.createAction;\n    }\n}));\nObject.defineProperty(exports, \"Priority\", ({\n    enumerable: true,\n    get: function() {\n        return utils_1.Priority;\n    }\n}));\n__exportStar(__webpack_require__(/*! ./useMatches */ \"(ssr)/./node_modules/kbar/lib/useMatches.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarPortal */ \"(ssr)/./node_modules/kbar/lib/KBarPortal.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarPositioner */ \"(ssr)/./node_modules/kbar/lib/KBarPositioner.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarSearch */ \"(ssr)/./node_modules/kbar/lib/KBarSearch.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarResults */ \"(ssr)/./node_modules/kbar/lib/KBarResults.js\"), exports);\n__exportStar(__webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\"), exports);\n__exportStar(__webpack_require__(/*! ./useRegisterActions */ \"(ssr)/./node_modules/kbar/lib/useRegisterActions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarContextProvider */ \"(ssr)/./node_modules/kbar/lib/KBarContextProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./KBarAnimator */ \"(ssr)/./node_modules/kbar/lib/KBarAnimator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./action */ \"(ssr)/./node_modules/kbar/lib/action/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQU1DLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCSixPQUFPTyxjQUFjLENBQUNMLEdBQUdHLElBQUk7UUFBRUcsWUFBWTtRQUFNQyxLQUFLO1lBQWEsT0FBT04sQ0FBQyxDQUFDQyxFQUFFO1FBQUU7SUFBRTtBQUN0RixJQUFNLFNBQVNGLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlNLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBU1AsQ0FBQyxFQUFFUSxRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS1QsRUFBRyxJQUFJUyxNQUFNLGFBQWEsQ0FBQ1osT0FBT2EsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0osVUFBU0MsSUFBSWIsZ0JBQWdCWSxVQUFTUixHQUFHUztBQUMzSDtBQUNBWiw4Q0FBNkM7SUFBRWdCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RMLGdCQUFnQixHQUFHQSxvQkFBb0IsR0FBRyxLQUFLO0FBQy9DLElBQUlRLFVBQVVDLG1CQUFPQSxDQUFDLHVEQUFTO0FBQy9CcEIsZ0RBQStDO0lBQUVRLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9VLFFBQVFELFlBQVk7SUFBRTtBQUFFLENBQUMsRUFBQztBQUN2SGxCLDRDQUEyQztJQUFFUSxZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPVSxRQUFRRixRQUFRO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDL0dQLGFBQWFVLG1CQUFPQSxDQUFDLGlFQUFjLEdBQUdUO0FBQ3RDRCxhQUFhVSxtQkFBT0EsQ0FBQyxpRUFBYyxHQUFHVDtBQUN0Q0QsYUFBYVUsbUJBQU9BLENBQUMseUVBQWtCLEdBQUdUO0FBQzFDRCxhQUFhVSxtQkFBT0EsQ0FBQyxpRUFBYyxHQUFHVDtBQUN0Q0QsYUFBYVUsbUJBQU9BLENBQUMsbUVBQWUsR0FBR1Q7QUFDdkNELGFBQWFVLG1CQUFPQSxDQUFDLDJEQUFXLEdBQUdUO0FBQ25DRCxhQUFhVSxtQkFBT0EsQ0FBQyxpRkFBc0IsR0FBR1Q7QUFDOUNELGFBQWFVLG1CQUFPQSxDQUFDLG1GQUF1QixHQUFHVDtBQUMvQ0QsYUFBYVUsbUJBQU9BLENBQUMscUVBQWdCLEdBQUdUO0FBQ3hDRCxhQUFhVSxtQkFBT0EsQ0FBQyx1REFBUyxHQUFHVDtBQUNqQ0QsYUFBYVUsbUJBQU9BLENBQUMsK0RBQVUsR0FBR1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZC1uZXh0anMtc3RhcnRlci1ibG9nLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL2luZGV4LmpzP2JhYjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHJpb3JpdHkgPSBleHBvcnRzLmNyZWF0ZUFjdGlvbiA9IHZvaWQgMDtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVBY3Rpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEuY3JlYXRlQWN0aW9uOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUHJpb3JpdHlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEuUHJpb3JpdHk7IH0gfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXNlTWF0Y2hlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vS0JhclBvcnRhbFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vS0JhclBvc2l0aW9uZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0tCYXJTZWFyY2hcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0tCYXJSZXN1bHRzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91c2VLQmFyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91c2VSZWdpc3RlckFjdGlvbnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0tCYXJDb250ZXh0UHJvdmlkZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0tCYXJBbmltYXRvclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FjdGlvblwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJfX2V4cG9ydFN0YXIiLCJleHBvcnRzIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInZhbHVlIiwiUHJpb3JpdHkiLCJjcmVhdGVBY3Rpb24iLCJ1dGlsc18xIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/tinykeys.js":
/*!*******************************************!*\
  !*** ./node_modules/kbar/lib/tinykeys.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Fixes special character issues; `?` -> `shift+/` + build issue\n// https://github.com/jamiebuilds/tinykeys\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n/**\n * These are the modifier keys that change the meaning of keybindings.\n *\n * Note: Ignoring \"AltGraph\" because it is covered by the others.\n */ var KEYBINDING_MODIFIER_KEYS = [\n    \"Shift\",\n    \"Meta\",\n    \"Alt\",\n    \"Control\"\n];\n/**\n * Keybinding sequences should timeout if individual key presses are more than\n * 1s apart by default.\n */ var DEFAULT_TIMEOUT = 1000;\n/**\n * Keybinding sequences should bind to this event by default.\n */ var DEFAULT_EVENT = \"keydown\";\n/**\n * An alias for creating platform-specific keybinding aliases.\n */ var MOD = typeof navigator === \"object\" && /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? \"Meta\" : \"Control\";\n/**\n * There's a bug in Chrome that causes event.getModifierState not to exist on\n * KeyboardEvent's for F1/F2/etc keys.\n */ function getModifierState(event, mod) {\n    return typeof event.getModifierState === \"function\" ? event.getModifierState(mod) : false;\n}\n/**\n * Parses a \"Key Binding String\" into its parts\n *\n * grammar    = `<sequence>`\n * <sequence> = `<press> <press> <press> ...`\n * <press>    = `<key>` or `<mods>+<key>`\n * <mods>     = `<mod>+<mod>+...`\n */ function parse(str) {\n    return str.trim().split(\" \").map(function(press) {\n        var mods = press.split(/\\b\\+/);\n        var key = mods.pop();\n        mods = mods.map(function(mod) {\n            return mod === \"$mod\" ? MOD : mod;\n        });\n        return [\n            mods,\n            key\n        ];\n    });\n}\n/**\n * This tells us if a series of events matches a key binding sequence either\n * partially or exactly.\n */ function match(event, press) {\n    // Special characters; `?` `!`\n    if (/^[^A-Za-z0-9]$/.test(event.key) && press[1] === event.key) {\n        return true;\n    }\n    // prettier-ignore\n    return !(// Allow either the `event.key` or the `event.code`\n    // MDN event.key: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n    // MDN event.code: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code\n    press[1].toUpperCase() !== event.key.toUpperCase() && press[1] !== event.code || // Ensure all the modifiers in the keybinding are pressed.\n    press[0].find(function(mod) {\n        return !getModifierState(event, mod);\n    }) || // KEYBINDING_MODIFIER_KEYS (Shift/Control/etc) change the meaning of a\n    // keybinding. So if they are pressed but aren't part of the current\n    // keybinding press, then we don't have a match.\n    KEYBINDING_MODIFIER_KEYS.find(function(mod) {\n        return !press[0].includes(mod) && press[1] !== mod && getModifierState(event, mod);\n    }));\n}\n/**\n * Subscribes to keybindings.\n *\n * Returns an unsubscribe method.\n *\n * @example\n * ```js\n * import keybindings from \"../src/keybindings\"\n *\n * keybindings(window, {\n * \t\"Shift+d\": () => {\n * \t\talert(\"The 'Shift' and 'd' keys were pressed at the same time\")\n * \t},\n * \t\"y e e t\": () => {\n * \t\talert(\"The keys 'y', 'e', 'e', and 't' were pressed in order\")\n * \t},\n * \t\"$mod+d\": () => {\n * \t\talert(\"Either 'Control+d' or 'Meta+d' were pressed\")\n * \t},\n * })\n * ```\n */ function keybindings(target, keyBindingMap, options) {\n    var _a, _b;\n    if (options === void 0) {\n        options = {};\n    }\n    var timeout = (_a = options.timeout) !== null && _a !== void 0 ? _a : DEFAULT_TIMEOUT;\n    var event = (_b = options.event) !== null && _b !== void 0 ? _b : DEFAULT_EVENT;\n    var keyBindings = Object.keys(keyBindingMap).map(function(key) {\n        return [\n            parse(key),\n            keyBindingMap[key]\n        ];\n    });\n    var possibleMatches = new Map();\n    var timer = null;\n    var onKeyEvent = function(event) {\n        // Ensure and stop any event that isn't a full keyboard event.\n        // Autocomplete option navigation and selection would fire a instanceof Event,\n        // instead of the expected KeyboardEvent\n        if (!(event instanceof KeyboardEvent)) {\n            return;\n        }\n        keyBindings.forEach(function(keyBinding) {\n            var sequence = keyBinding[0];\n            var callback = keyBinding[1];\n            var prev = possibleMatches.get(sequence);\n            var remainingExpectedPresses = prev ? prev : sequence;\n            var currentExpectedPress = remainingExpectedPresses[0];\n            var matches = match(event, currentExpectedPress);\n            if (!matches) {\n                // Modifier keydown events shouldn't break sequences\n                // Note: This works because:\n                // - non-modifiers will always return false\n                // - if the current keypress is a modifier then it will return true when we check its state\n                // MDN: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState\n                if (!getModifierState(event, event.key)) {\n                    possibleMatches.delete(sequence);\n                }\n            } else if (remainingExpectedPresses.length > 1) {\n                possibleMatches.set(sequence, remainingExpectedPresses.slice(1));\n            } else {\n                possibleMatches.delete(sequence);\n                callback(event);\n            }\n        });\n        if (timer) {\n            clearTimeout(timer);\n        }\n        // @ts-ignore\n        timer = setTimeout(possibleMatches.clear.bind(possibleMatches), timeout);\n    };\n    target.addEventListener(event, onKeyEvent);\n    return function() {\n        target.removeEventListener(event, onKeyEvent);\n    };\n}\nexports[\"default\"] = keybindings;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/tinykeys.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/types.js":
/*!****************************************!*\
  !*** ./node_modules/kbar/lib/types.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.VisualState = void 0;\nvar VisualState;\n(function(VisualState) {\n    VisualState[\"animatingIn\"] = \"animating-in\";\n    VisualState[\"showing\"] = \"showing\";\n    VisualState[\"animatingOut\"] = \"animating-out\";\n    VisualState[\"hidden\"] = \"hidden\";\n})(VisualState = exports.VisualState || (exports.VisualState = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1CQUFtQixHQUFHLEtBQUs7QUFDM0IsSUFBSUU7QUFDSCxVQUFVQSxXQUFXO0lBQ2xCQSxXQUFXLENBQUMsY0FBYyxHQUFHO0lBQzdCQSxXQUFXLENBQUMsVUFBVSxHQUFHO0lBQ3pCQSxXQUFXLENBQUMsZUFBZSxHQUFHO0lBQzlCQSxXQUFXLENBQUMsU0FBUyxHQUFHO0FBQzVCLEdBQUdBLGNBQWNGLFFBQVFFLFdBQVcsSUFBS0YsQ0FBQUEsbUJBQW1CLEdBQUcsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kLW5leHRqcy1zdGFydGVyLWJsb2cvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdHlwZXMuanM/NDY5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVmlzdWFsU3RhdGUgPSB2b2lkIDA7XG52YXIgVmlzdWFsU3RhdGU7XG4oZnVuY3Rpb24gKFZpc3VhbFN0YXRlKSB7XG4gICAgVmlzdWFsU3RhdGVbXCJhbmltYXRpbmdJblwiXSA9IFwiYW5pbWF0aW5nLWluXCI7XG4gICAgVmlzdWFsU3RhdGVbXCJzaG93aW5nXCJdID0gXCJzaG93aW5nXCI7XG4gICAgVmlzdWFsU3RhdGVbXCJhbmltYXRpbmdPdXRcIl0gPSBcImFuaW1hdGluZy1vdXRcIjtcbiAgICBWaXN1YWxTdGF0ZVtcImhpZGRlblwiXSA9IFwiaGlkZGVuXCI7XG59KShWaXN1YWxTdGF0ZSA9IGV4cG9ydHMuVmlzdWFsU3RhdGUgfHwgKGV4cG9ydHMuVmlzdWFsU3RhdGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVmlzdWFsU3RhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useKBar.js":
/*!******************************************!*\
  !*** ./node_modules/kbar/lib/useKBar.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useKBar = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar KBarContextProvider_1 = __webpack_require__(/*! ./KBarContextProvider */ \"(ssr)/./node_modules/kbar/lib/KBarContextProvider.js\");\nfunction useKBar(collector) {\n    var _a = React.useContext(KBarContextProvider_1.KBarContext), query = _a.query, getState = _a.getState, subscribe = _a.subscribe, options = _a.options;\n    var collected = React.useRef(collector === null || collector === void 0 ? void 0 : collector(getState()));\n    var collectorRef = React.useRef(collector);\n    var onCollect = React.useCallback(function(collected) {\n        return __assign(__assign({}, collected), {\n            query: query,\n            options: options\n        });\n    }, [\n        query,\n        options\n    ]);\n    var _b = React.useState(onCollect(collected.current)), render = _b[0], setRender = _b[1];\n    React.useEffect(function() {\n        var unsubscribe;\n        if (collectorRef.current) {\n            unsubscribe = subscribe(function(current) {\n                return collectorRef.current(current);\n            }, function(collected) {\n                return setRender(onCollect(collected));\n            });\n        }\n        return function() {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }, [\n        onCollect,\n        subscribe\n    ]);\n    return render;\n}\nexports.useKBar = useKBar;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdXNlS0Jhci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLFdBQVcsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxRQUFRLElBQUs7SUFDdENBLFdBQVdDLE9BQU9DLE1BQU0sSUFBSSxTQUFTQyxDQUFDO1FBQ2xDLElBQUssSUFBSUMsR0FBR0MsSUFBSSxHQUFHQyxJQUFJQyxVQUFVQyxNQUFNLEVBQUVILElBQUlDLEdBQUdELElBQUs7WUFDakRELElBQUlHLFNBQVMsQ0FBQ0YsRUFBRTtZQUNoQixJQUFLLElBQUlJLEtBQUtMLEVBQUcsSUFBSUgsT0FBT1MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1IsR0FBR0ssSUFDekROLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7UUFDbkI7UUFDQSxPQUFPTjtJQUNYO0lBQ0EsT0FBT0gsU0FBU2EsS0FBSyxDQUFDLElBQUksRUFBRU47QUFDaEM7QUFDQSxJQUFJTyxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQU1iLENBQUFBLE9BQU9jLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCakIsT0FBT29CLGNBQWMsQ0FBQ0wsR0FBR0csSUFBSTtRQUFFRyxZQUFZO1FBQU1DLEtBQUs7WUFBYSxPQUFPTixDQUFDLENBQUNDLEVBQUU7UUFBRTtJQUFFO0FBQ3RGLElBQU0sU0FBU0YsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSU0scUJBQXFCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsa0JBQWtCLElBQU12QixDQUFBQSxPQUFPYyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFUyxDQUFDO0lBQ3pGeEIsT0FBT29CLGNBQWMsQ0FBQ0wsR0FBRyxXQUFXO1FBQUVNLFlBQVk7UUFBTUksT0FBT0Q7SUFBRTtBQUNyRSxJQUFLLFNBQVNULENBQUMsRUFBRVMsQ0FBQztJQUNkVCxDQUFDLENBQUMsVUFBVSxHQUFHUztBQUNuQjtBQUNBLElBQUlFLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBVUMsR0FBRztJQUMzRCxJQUFJQSxPQUFPQSxJQUFJQyxVQUFVLEVBQUUsT0FBT0Q7SUFDbEMsSUFBSUUsU0FBUyxDQUFDO0lBQ2QsSUFBSUYsT0FBTyxNQUFNO1FBQUEsSUFBSyxJQUFJVixLQUFLVSxJQUFLLElBQUlWLE1BQU0sYUFBYWpCLE9BQU9TLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNnQixLQUFLVixJQUFJSixnQkFBZ0JnQixRQUFRRixLQUFLVjtJQUFFO0lBQ3hJTSxtQkFBbUJNLFFBQVFGO0lBQzNCLE9BQU9FO0FBQ1g7QUFDQTdCLDhDQUE2QztJQUFFeUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REssZUFBZSxHQUFHLEtBQUs7QUFDdkIsSUFBSUUsUUFBUU4sYUFBYU8sbUJBQU9BLENBQUMsd0dBQU87QUFDeEMsSUFBSUMsd0JBQXdCRCxtQkFBT0EsQ0FBQyxtRkFBdUI7QUFDM0QsU0FBU0YsUUFBUUksU0FBUztJQUN0QixJQUFJQyxLQUFLSixNQUFNSyxVQUFVLENBQUNILHNCQUFzQkksV0FBVyxHQUFHQyxRQUFRSCxHQUFHRyxLQUFLLEVBQUVDLFdBQVdKLEdBQUdJLFFBQVEsRUFBRUMsWUFBWUwsR0FBR0ssU0FBUyxFQUFFQyxVQUFVTixHQUFHTSxPQUFPO0lBQ3RKLElBQUlDLFlBQVlYLE1BQU1ZLE1BQU0sQ0FBQ1QsY0FBYyxRQUFRQSxjQUFjLEtBQUssSUFBSSxLQUFLLElBQUlBLFVBQVVLO0lBQzdGLElBQUlLLGVBQWViLE1BQU1ZLE1BQU0sQ0FBQ1Q7SUFDaEMsSUFBSVcsWUFBWWQsTUFBTWUsV0FBVyxDQUFDLFNBQVVKLFNBQVM7UUFBSSxPQUFRNUMsU0FBU0EsU0FBUyxDQUFDLEdBQUc0QyxZQUFZO1lBQUVKLE9BQU9BO1lBQU9HLFNBQVNBO1FBQVE7SUFBSyxHQUFHO1FBQUNIO1FBQU9HO0tBQVE7SUFDNUosSUFBSU0sS0FBS2hCLE1BQU1pQixRQUFRLENBQUNILFVBQVVILFVBQVVPLE9BQU8sSUFBSUMsU0FBU0gsRUFBRSxDQUFDLEVBQUUsRUFBRUksWUFBWUosRUFBRSxDQUFDLEVBQUU7SUFDeEZoQixNQUFNcUIsU0FBUyxDQUFDO1FBQ1osSUFBSUM7UUFDSixJQUFJVCxhQUFhSyxPQUFPLEVBQUU7WUFDdEJJLGNBQWNiLFVBQVUsU0FBVVMsT0FBTztnQkFBSSxPQUFPTCxhQUFhSyxPQUFPLENBQUNBO1lBQVUsR0FBRyxTQUFVUCxTQUFTO2dCQUFJLE9BQU9TLFVBQVVOLFVBQVVIO1lBQWE7UUFDeko7UUFDQSxPQUFPO1lBQ0gsSUFBSVcsYUFBYTtnQkFDYkE7WUFDSjtRQUNKO0lBQ0osR0FBRztRQUFDUjtRQUFXTDtLQUFVO0lBQ3pCLE9BQU9VO0FBQ1g7QUFDQXJCLGVBQWUsR0FBR0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZC1uZXh0anMtc3RhcnRlci1ibG9nLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL3VzZUtCYXIuanM/YmY2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXNlS0JhciA9IHZvaWQgMDtcbnZhciBSZWFjdCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwicmVhY3RcIikpO1xudmFyIEtCYXJDb250ZXh0UHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL0tCYXJDb250ZXh0UHJvdmlkZXJcIik7XG5mdW5jdGlvbiB1c2VLQmFyKGNvbGxlY3Rvcikge1xuICAgIHZhciBfYSA9IFJlYWN0LnVzZUNvbnRleHQoS0JhckNvbnRleHRQcm92aWRlcl8xLktCYXJDb250ZXh0KSwgcXVlcnkgPSBfYS5xdWVyeSwgZ2V0U3RhdGUgPSBfYS5nZXRTdGF0ZSwgc3Vic2NyaWJlID0gX2Euc3Vic2NyaWJlLCBvcHRpb25zID0gX2Eub3B0aW9ucztcbiAgICB2YXIgY29sbGVjdGVkID0gUmVhY3QudXNlUmVmKGNvbGxlY3RvciA9PT0gbnVsbCB8fCBjb2xsZWN0b3IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbGxlY3RvcihnZXRTdGF0ZSgpKSk7XG4gICAgdmFyIGNvbGxlY3RvclJlZiA9IFJlYWN0LnVzZVJlZihjb2xsZWN0b3IpO1xuICAgIHZhciBvbkNvbGxlY3QgPSBSZWFjdC51c2VDYWxsYmFjayhmdW5jdGlvbiAoY29sbGVjdGVkKSB7IHJldHVybiAoX19hc3NpZ24oX19hc3NpZ24oe30sIGNvbGxlY3RlZCksIHsgcXVlcnk6IHF1ZXJ5LCBvcHRpb25zOiBvcHRpb25zIH0pKTsgfSwgW3F1ZXJ5LCBvcHRpb25zXSk7XG4gICAgdmFyIF9iID0gUmVhY3QudXNlU3RhdGUob25Db2xsZWN0KGNvbGxlY3RlZC5jdXJyZW50KSksIHJlbmRlciA9IF9iWzBdLCBzZXRSZW5kZXIgPSBfYlsxXTtcbiAgICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdW5zdWJzY3JpYmU7XG4gICAgICAgIGlmIChjb2xsZWN0b3JSZWYuY3VycmVudCkge1xuICAgICAgICAgICAgdW5zdWJzY3JpYmUgPSBzdWJzY3JpYmUoZnVuY3Rpb24gKGN1cnJlbnQpIHsgcmV0dXJuIGNvbGxlY3RvclJlZi5jdXJyZW50KGN1cnJlbnQpOyB9LCBmdW5jdGlvbiAoY29sbGVjdGVkKSB7IHJldHVybiBzZXRSZW5kZXIob25Db2xsZWN0KGNvbGxlY3RlZCkpOyB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHVuc3Vic2NyaWJlKSB7XG4gICAgICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9LCBbb25Db2xsZWN0LCBzdWJzY3JpYmVdKTtcbiAgICByZXR1cm4gcmVuZGVyO1xufVxuZXhwb3J0cy51c2VLQmFyID0gdXNlS0JhcjtcbiJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsIk9iamVjdCIsImFzc2lnbiIsInQiLCJzIiwiaSIsIm4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJfX2NyZWF0ZUJpbmRpbmciLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIl9fc2V0TW9kdWxlRGVmYXVsdCIsInYiLCJ2YWx1ZSIsIl9faW1wb3J0U3RhciIsIm1vZCIsIl9fZXNNb2R1bGUiLCJyZXN1bHQiLCJleHBvcnRzIiwidXNlS0JhciIsIlJlYWN0IiwicmVxdWlyZSIsIktCYXJDb250ZXh0UHJvdmlkZXJfMSIsImNvbGxlY3RvciIsIl9hIiwidXNlQ29udGV4dCIsIktCYXJDb250ZXh0IiwicXVlcnkiLCJnZXRTdGF0ZSIsInN1YnNjcmliZSIsIm9wdGlvbnMiLCJjb2xsZWN0ZWQiLCJ1c2VSZWYiLCJjb2xsZWN0b3JSZWYiLCJvbkNvbGxlY3QiLCJ1c2VDYWxsYmFjayIsIl9iIiwidXNlU3RhdGUiLCJjdXJyZW50IiwicmVuZGVyIiwic2V0UmVuZGVyIiwidXNlRWZmZWN0IiwidW5zdWJzY3JpYmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useKBar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useMatches.js":
/*!*********************************************!*\
  !*** ./node_modules/kbar/lib/useMatches.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useDeepMatches = exports.useMatches = exports.NO_GROUP = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/kbar/lib/utils.js\");\nvar fuse_js_1 = __importDefault(__webpack_require__(/*! fuse.js */ \"(ssr)/./node_modules/fuse.js/dist/fuse.esm.js\"));\nexports.NO_GROUP = {\n    name: \"none\",\n    priority: utils_1.Priority.NORMAL\n};\nvar fuseOptions = {\n    keys: [\n        {\n            name: \"name\",\n            weight: 0.5\n        },\n        {\n            name: \"keywords\",\n            getFn: function(item) {\n                var _a;\n                return ((_a = item.keywords) !== null && _a !== void 0 ? _a : \"\").split(\",\");\n            },\n            weight: 0.5\n        },\n        \"subtitle\"\n    ],\n    includeScore: true,\n    includeMatches: true,\n    threshold: 0.2,\n    minMatchCharLength: 1\n};\nfunction order(a, b) {\n    /**\n     * Larger the priority = higher up the list\n     */ return b.priority - a.priority;\n}\n/**\n * returns deep matches only when a search query is present\n */ function useMatches() {\n    var _a = (0, useKBar_1.useKBar)(function(state) {\n        return {\n            search: state.searchQuery,\n            actions: state.actions,\n            rootActionId: state.currentRootActionId\n        };\n    }), search = _a.search, actions = _a.actions, rootActionId = _a.rootActionId;\n    var rootResults = React.useMemo(function() {\n        return Object.keys(actions).reduce(function(acc, actionId) {\n            var action = actions[actionId];\n            if (!action.parent && !rootActionId) {\n                acc.push(action);\n            }\n            if (action.id === rootActionId) {\n                for(var i = 0; i < action.children.length; i++){\n                    acc.push(action.children[i]);\n                }\n            }\n            return acc;\n        }, []).sort(order);\n    }, [\n        actions,\n        rootActionId\n    ]);\n    var getDeepResults = React.useCallback(function(actions) {\n        var actionsClone = [];\n        for(var i = 0; i < actions.length; i++){\n            actionsClone.push(actions[i]);\n        }\n        return function collectChildren(actions, all) {\n            if (all === void 0) {\n                all = actionsClone;\n            }\n            for(var i = 0; i < actions.length; i++){\n                if (actions[i].children.length > 0) {\n                    var childsChildren = actions[i].children;\n                    for(var i_1 = 0; i_1 < childsChildren.length; i_1++){\n                        all.push(childsChildren[i_1]);\n                    }\n                    collectChildren(actions[i].children, all);\n                }\n            }\n            return all;\n        }(actions);\n    }, []);\n    var emptySearch = !search;\n    var filtered = React.useMemo(function() {\n        if (emptySearch) return rootResults;\n        return getDeepResults(rootResults);\n    }, [\n        getDeepResults,\n        rootResults,\n        emptySearch\n    ]);\n    var fuse = React.useMemo(function() {\n        return new fuse_js_1.default(filtered, fuseOptions);\n    }, [\n        filtered\n    ]);\n    var matches = useInternalMatches(filtered, search, fuse);\n    var results = React.useMemo(function() {\n        var _a, _b;\n        /**\n         * Store a reference to a section and it's list of actions.\n         * Alongside these actions, we'll keep a temporary record of the\n         * final priority calculated by taking the commandScore + the\n         * explicitly set `action.priority` value.\n         */ var map = {};\n        /**\n         * Store another reference to a list of sections alongside\n         * the section's final priority, calculated the same as above.\n         */ var list = [];\n        /**\n         * We'll take the list above and sort by its priority. Then we'll\n         * collect all actions from the map above for this specific name and\n         * sort by its priority as well.\n         */ var ordered = [];\n        for(var i = 0; i < matches.length; i++){\n            var match = matches[i];\n            var action = match.action;\n            var score = match.score || utils_1.Priority.NORMAL;\n            var section = {\n                name: typeof action.section === \"string\" ? action.section : ((_a = action.section) === null || _a === void 0 ? void 0 : _a.name) || exports.NO_GROUP.name,\n                priority: typeof action.section === \"string\" ? score : ((_b = action.section) === null || _b === void 0 ? void 0 : _b.priority) || 0 + score\n            };\n            if (!map[section.name]) {\n                map[section.name] = [];\n                list.push(section);\n            }\n            map[section.name].push({\n                priority: action.priority + score,\n                action: action\n            });\n        }\n        ordered = list.sort(order).map(function(group) {\n            return {\n                name: group.name,\n                actions: map[group.name].sort(order).map(function(item) {\n                    return item.action;\n                })\n            };\n        });\n        /**\n         * Our final result is simply flattening the ordered list into\n         * our familiar (ActionImpl | string)[] shape.\n         */ var results = [];\n        for(var i = 0; i < ordered.length; i++){\n            var group = ordered[i];\n            if (group.name !== exports.NO_GROUP.name) results.push(group.name);\n            for(var i_2 = 0; i_2 < group.actions.length; i_2++){\n                results.push(group.actions[i_2]);\n            }\n        }\n        return results;\n    }, [\n        matches\n    ]);\n    // ensure that users have an accurate `currentRootActionId`\n    // that syncs with the throttled return value.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var memoRootActionId = React.useMemo(function() {\n        return rootActionId;\n    }, [\n        results\n    ]);\n    return React.useMemo(function() {\n        return {\n            results: results,\n            rootActionId: memoRootActionId\n        };\n    }, [\n        memoRootActionId,\n        results\n    ]);\n}\nexports.useMatches = useMatches;\nfunction useInternalMatches(filtered, search, fuse) {\n    var value = React.useMemo(function() {\n        return {\n            filtered: filtered,\n            search: search\n        };\n    }, [\n        filtered,\n        search\n    ]);\n    var _a = (0, utils_1.useThrottledValue)(value), throttledFiltered = _a.filtered, throttledSearch = _a.search;\n    return React.useMemo(function() {\n        if (throttledSearch.trim() === \"\") {\n            return throttledFiltered.map(function(action) {\n                return {\n                    score: 0,\n                    action: action\n                };\n            });\n        }\n        var matches = [];\n        // Use Fuse's `search` method to perform the search efficiently\n        var searchResults = fuse.search(throttledSearch);\n        // Format the search results to match the existing structure\n        matches = searchResults.map(function(_a) {\n            var action = _a.item, score = _a.score;\n            return {\n                score: 1 / ((score !== null && score !== void 0 ? score : 0) + 1),\n                action: action\n            };\n        });\n        return matches;\n    }, [\n        throttledFiltered,\n        throttledSearch,\n        fuse\n    ]);\n}\n/**\n * @deprecated use useMatches\n */ exports.useDeepMatches = useMatches;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useMatches.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useRegisterActions.js":
/*!*****************************************************!*\
  !*** ./node_modules/kbar/lib/useRegisterActions.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useRegisterActions = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar useKBar_1 = __webpack_require__(/*! ./useKBar */ \"(ssr)/./node_modules/kbar/lib/useKBar.js\");\nfunction useRegisterActions(actions, dependencies) {\n    if (dependencies === void 0) {\n        dependencies = [];\n    }\n    var query = (0, useKBar_1.useKBar)().query;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var actionsCache = React.useMemo(function() {\n        return actions;\n    }, dependencies);\n    React.useEffect(function() {\n        if (!actionsCache.length) {\n            return;\n        }\n        var unregister = query.registerActions(actionsCache);\n        return function() {\n            unregister();\n        };\n    }, [\n        query,\n        actionsCache\n    ]);\n}\nexports.useRegisterActions = useRegisterActions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Jhci9saWIvdXNlUmVnaXN0ZXJBY3Rpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkosT0FBT08sY0FBYyxDQUFDTCxHQUFHRyxJQUFJO1FBQUVHLFlBQVk7UUFBTUMsS0FBSztZQUFhLE9BQU9OLENBQUMsQ0FBQ0MsRUFBRTtRQUFFO0lBQUU7QUFDdEYsSUFBTSxTQUFTRixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJTSxxQkFBcUIsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxrQkFBa0IsSUFBTVYsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRVMsQ0FBQztJQUN6RlgsT0FBT08sY0FBYyxDQUFDTCxHQUFHLFdBQVc7UUFBRU0sWUFBWTtRQUFNSSxPQUFPRDtJQUFFO0FBQ3JFLElBQUssU0FBU1QsQ0FBQyxFQUFFUyxDQUFDO0lBQ2RULENBQUMsQ0FBQyxVQUFVLEdBQUdTO0FBQ25CO0FBQ0EsSUFBSUUsZUFBZSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFlBQVksSUFBSyxTQUFVQyxHQUFHO0lBQzNELElBQUlBLE9BQU9BLElBQUlDLFVBQVUsRUFBRSxPQUFPRDtJQUNsQyxJQUFJRSxTQUFTLENBQUM7SUFDZCxJQUFJRixPQUFPLE1BQU07UUFBQSxJQUFLLElBQUlWLEtBQUtVLElBQUssSUFBSVYsTUFBTSxhQUFhSixPQUFPaUIsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0wsS0FBS1YsSUFBSUwsZ0JBQWdCaUIsUUFBUUYsS0FBS1Y7SUFBRTtJQUN4SU0sbUJBQW1CTSxRQUFRRjtJQUMzQixPQUFPRTtBQUNYO0FBQ0FoQiw4Q0FBNkM7SUFBRVksT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RFEsMEJBQTBCLEdBQUcsS0FBSztBQUNsQyxJQUFJRSxRQUFRVCxhQUFhVSxtQkFBT0EsQ0FBQyx3R0FBTztBQUN4QyxJQUFJQyxZQUFZRCxtQkFBT0EsQ0FBQywyREFBVztBQUNuQyxTQUFTRixtQkFBbUJJLE9BQU8sRUFBRUMsWUFBWTtJQUM3QyxJQUFJQSxpQkFBaUIsS0FBSyxHQUFHO1FBQUVBLGVBQWUsRUFBRTtJQUFFO0lBQ2xELElBQUlDLFFBQVEsQ0FBQyxHQUFHSCxVQUFVSSxPQUFPLElBQUlELEtBQUs7SUFDMUMsdURBQXVEO0lBQ3ZELElBQUlFLGVBQWVQLE1BQU1RLE9BQU8sQ0FBQztRQUFjLE9BQU9MO0lBQVMsR0FBR0M7SUFDbEVKLE1BQU1TLFNBQVMsQ0FBQztRQUNaLElBQUksQ0FBQ0YsYUFBYUcsTUFBTSxFQUFFO1lBQ3RCO1FBQ0o7UUFDQSxJQUFJQyxhQUFhTixNQUFNTyxlQUFlLENBQUNMO1FBQ3ZDLE9BQU87WUFDSEk7UUFDSjtJQUNKLEdBQUc7UUFBQ047UUFBT0U7S0FBYTtBQUM1QjtBQUNBVCwwQkFBMEIsR0FBR0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZC1uZXh0anMtc3RhcnRlci1ibG9nLy4vbm9kZV9tb2R1bGVzL2tiYXIvbGliL3VzZVJlZ2lzdGVyQWN0aW9ucy5qcz81NzUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnVzZVJlZ2lzdGVyQWN0aW9ucyA9IHZvaWQgMDtcbnZhciBSZWFjdCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwicmVhY3RcIikpO1xudmFyIHVzZUtCYXJfMSA9IHJlcXVpcmUoXCIuL3VzZUtCYXJcIik7XG5mdW5jdGlvbiB1c2VSZWdpc3RlckFjdGlvbnMoYWN0aW9ucywgZGVwZW5kZW5jaWVzKSB7XG4gICAgaWYgKGRlcGVuZGVuY2llcyA9PT0gdm9pZCAwKSB7IGRlcGVuZGVuY2llcyA9IFtdOyB9XG4gICAgdmFyIHF1ZXJ5ID0gKDAsIHVzZUtCYXJfMS51c2VLQmFyKSgpLnF1ZXJ5O1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHNcbiAgICB2YXIgYWN0aW9uc0NhY2hlID0gUmVhY3QudXNlTWVtbyhmdW5jdGlvbiAoKSB7IHJldHVybiBhY3Rpb25zOyB9LCBkZXBlbmRlbmNpZXMpO1xuICAgIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghYWN0aW9uc0NhY2hlLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciB1bnJlZ2lzdGVyID0gcXVlcnkucmVnaXN0ZXJBY3Rpb25zKGFjdGlvbnNDYWNoZSk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB1bnJlZ2lzdGVyKCk7XG4gICAgICAgIH07XG4gICAgfSwgW3F1ZXJ5LCBhY3Rpb25zQ2FjaGVdKTtcbn1cbmV4cG9ydHMudXNlUmVnaXN0ZXJBY3Rpb25zID0gdXNlUmVnaXN0ZXJBY3Rpb25zO1xuIl0sIm5hbWVzIjpbIl9fY3JlYXRlQmluZGluZyIsIk9iamVjdCIsImNyZWF0ZSIsIm8iLCJtIiwiayIsImsyIiwidW5kZWZpbmVkIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX19zZXRNb2R1bGVEZWZhdWx0IiwidiIsInZhbHVlIiwiX19pbXBvcnRTdGFyIiwibW9kIiwiX19lc01vZHVsZSIsInJlc3VsdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImV4cG9ydHMiLCJ1c2VSZWdpc3RlckFjdGlvbnMiLCJSZWFjdCIsInJlcXVpcmUiLCJ1c2VLQmFyXzEiLCJhY3Rpb25zIiwiZGVwZW5kZW5jaWVzIiwicXVlcnkiLCJ1c2VLQmFyIiwiYWN0aW9uc0NhY2hlIiwidXNlTWVtbyIsInVzZUVmZmVjdCIsImxlbmd0aCIsInVucmVnaXN0ZXIiLCJyZWdpc3RlckFjdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useRegisterActions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/useStore.js":
/*!*******************************************!*\
  !*** ./node_modules/kbar/lib/useStore.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useStore = void 0;\nvar fast_equals_1 = __webpack_require__(/*! fast-equals */ \"(ssr)/./node_modules/fast-equals/dist/fast-equals.esm.js\");\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar tiny_invariant_1 = __importDefault(__webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\"));\nvar ActionInterface_1 = __webpack_require__(/*! ./action/ActionInterface */ \"(ssr)/./node_modules/kbar/lib/action/ActionInterface.js\");\nvar HistoryImpl_1 = __webpack_require__(/*! ./action/HistoryImpl */ \"(ssr)/./node_modules/kbar/lib/action/HistoryImpl.js\");\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/kbar/lib/types.js\");\nfunction useStore(props) {\n    var optionsRef = React.useRef(__assign({\n        animations: {\n            enterMs: 200,\n            exitMs: 100\n        }\n    }, props.options));\n    var actionsInterface = React.useMemo(function() {\n        return new ActionInterface_1.ActionInterface(props.actions || [], {\n            historyManager: optionsRef.current.enableHistory ? HistoryImpl_1.history : undefined\n        });\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // TODO: at this point useReducer might be a better approach to managing state.\n    var _a = React.useState({\n        searchQuery: \"\",\n        currentRootActionId: null,\n        visualState: types_1.VisualState.hidden,\n        actions: __assign({}, actionsInterface.actions),\n        activeIndex: 0,\n        disabled: false\n    }), state = _a[0], setState = _a[1];\n    var currState = React.useRef(state);\n    currState.current = state;\n    var getState = React.useCallback(function() {\n        return currState.current;\n    }, []);\n    var publisher = React.useMemo(function() {\n        return new Publisher(getState);\n    }, [\n        getState\n    ]);\n    React.useEffect(function() {\n        currState.current = state;\n        publisher.notify();\n    }, [\n        state,\n        publisher\n    ]);\n    var registerActions = React.useCallback(function(actions) {\n        setState(function(state) {\n            return __assign(__assign({}, state), {\n                actions: actionsInterface.add(actions)\n            });\n        });\n        return function unregister() {\n            setState(function(state) {\n                return __assign(__assign({}, state), {\n                    actions: actionsInterface.remove(actions)\n                });\n            });\n        };\n    }, [\n        actionsInterface\n    ]);\n    var inputRef = React.useRef(null);\n    return React.useMemo(function() {\n        var query = {\n            setCurrentRootAction: function(actionId) {\n                setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        currentRootActionId: actionId\n                    });\n                });\n            },\n            setVisualState: function(cb) {\n                setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        visualState: typeof cb === \"function\" ? cb(state.visualState) : cb\n                    });\n                });\n            },\n            setSearch: function(searchQuery) {\n                return setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        searchQuery: searchQuery\n                    });\n                });\n            },\n            registerActions: registerActions,\n            toggle: function() {\n                return setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        visualState: [\n                            types_1.VisualState.animatingOut,\n                            types_1.VisualState.hidden\n                        ].includes(state.visualState) ? types_1.VisualState.animatingIn : types_1.VisualState.animatingOut\n                    });\n                });\n            },\n            setActiveIndex: function(cb) {\n                return setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        activeIndex: typeof cb === \"number\" ? cb : cb(state.activeIndex)\n                    });\n                });\n            },\n            inputRefSetter: function(el) {\n                inputRef.current = el;\n            },\n            getInput: function() {\n                (0, tiny_invariant_1.default)(inputRef.current, \"Input ref is undefined, make sure you attach `query.inputRefSetter` to your search input.\");\n                return inputRef.current;\n            },\n            disable: function(disable) {\n                setState(function(state) {\n                    return __assign(__assign({}, state), {\n                        disabled: disable\n                    });\n                });\n            }\n        };\n        return {\n            getState: getState,\n            query: query,\n            options: optionsRef.current,\n            subscribe: function(collector, cb) {\n                return publisher.subscribe(collector, cb);\n            }\n        };\n    }, [\n        getState,\n        publisher,\n        registerActions\n    ]);\n}\nexports.useStore = useStore;\nvar Publisher = /** @class */ function() {\n    function Publisher(getState) {\n        this.subscribers = [];\n        this.getState = getState;\n    }\n    Publisher.prototype.subscribe = function(collector, onChange) {\n        var _this = this;\n        var subscriber = new Subscriber(function() {\n            return collector(_this.getState());\n        }, onChange);\n        this.subscribers.push(subscriber);\n        return this.unsubscribe.bind(this, subscriber);\n    };\n    Publisher.prototype.unsubscribe = function(subscriber) {\n        if (this.subscribers.length) {\n            var index = this.subscribers.indexOf(subscriber);\n            if (index > -1) {\n                return this.subscribers.splice(index, 1);\n            }\n        }\n    };\n    Publisher.prototype.notify = function() {\n        this.subscribers.forEach(function(subscriber) {\n            return subscriber.collect();\n        });\n    };\n    return Publisher;\n}();\nvar Subscriber = /** @class */ function() {\n    function Subscriber(collector, onChange) {\n        this.collector = collector;\n        this.onChange = onChange;\n    }\n    Subscriber.prototype.collect = function() {\n        try {\n            // grab latest state\n            var recollect = this.collector();\n            if (!(0, fast_equals_1.deepEqual)(recollect, this.collected)) {\n                this.collected = recollect;\n                if (this.onChange) {\n                    this.onChange(this.collected);\n                }\n            }\n        } catch (error) {\n            console.warn(error);\n        }\n    };\n    return Subscriber;\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/useStore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/kbar/lib/utils.js":
/*!****************************************!*\
  !*** ./node_modules/kbar/lib/utils.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (void 0) && (void 0).__spreadArray || function(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Priority = exports.isModKey = exports.shouldRejectKeystrokes = exports.useThrottledValue = exports.getScrollbarWidth = exports.useIsomorphicLayout = exports.noop = exports.createAction = exports.randomId = exports.usePointerMovedSinceMount = exports.useOuterClick = exports.swallowEvent = void 0;\nvar React = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nfunction swallowEvent(event) {\n    event.stopPropagation();\n    event.preventDefault();\n}\nexports.swallowEvent = swallowEvent;\nfunction useOuterClick(dom, cb) {\n    var cbRef = React.useRef(cb);\n    cbRef.current = cb;\n    React.useEffect(function() {\n        function handler(event) {\n            var _a, _b;\n            if (((_a = dom.current) === null || _a === void 0 ? void 0 : _a.contains(event.target)) || // Add support for ReactShadowRoot\n            // @ts-expect-error wrong types, the `host` property exists https://stackoverflow.com/a/25340456\n            event.target === ((_b = dom.current) === null || _b === void 0 ? void 0 : _b.getRootNode().host)) {\n                return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n            cbRef.current();\n        }\n        window.addEventListener(\"pointerdown\", handler, true);\n        return function() {\n            return window.removeEventListener(\"pointerdown\", handler, true);\n        };\n    }, [\n        dom\n    ]);\n}\nexports.useOuterClick = useOuterClick;\nfunction usePointerMovedSinceMount() {\n    var _a = React.useState(false), moved = _a[0], setMoved = _a[1];\n    React.useEffect(function() {\n        function handler() {\n            setMoved(true);\n        }\n        if (!moved) {\n            window.addEventListener(\"pointermove\", handler);\n            return function() {\n                return window.removeEventListener(\"pointermove\", handler);\n            };\n        }\n    }, [\n        moved\n    ]);\n    return moved;\n}\nexports.usePointerMovedSinceMount = usePointerMovedSinceMount;\nfunction randomId() {\n    return Math.random().toString(36).substring(2, 9);\n}\nexports.randomId = randomId;\nfunction createAction(params) {\n    return __assign({\n        id: randomId()\n    }, params);\n}\nexports.createAction = createAction;\nfunction noop() {}\nexports.noop = noop;\nexports.useIsomorphicLayout =  true ? noop : 0;\n// https://stackoverflow.com/questions/13382516/getting-scroll-bar-width-using-javascript\nfunction getScrollbarWidth() {\n    var outer = document.createElement(\"div\");\n    outer.style.visibility = \"hidden\";\n    outer.style.overflow = \"scroll\";\n    document.body.appendChild(outer);\n    var inner = document.createElement(\"div\");\n    outer.appendChild(inner);\n    var scrollbarWidth = outer.offsetWidth - inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n    return scrollbarWidth;\n}\nexports.getScrollbarWidth = getScrollbarWidth;\nfunction useThrottledValue(value, ms) {\n    if (ms === void 0) {\n        ms = 100;\n    }\n    var _a = React.useState(value), throttledValue = _a[0], setThrottledValue = _a[1];\n    var lastRan = React.useRef(Date.now());\n    React.useEffect(function() {\n        if (ms === 0) return;\n        var timeout = setTimeout(function() {\n            setThrottledValue(value);\n            lastRan.current = Date.now();\n        }, lastRan.current - (Date.now() - ms));\n        return function() {\n            clearTimeout(timeout);\n        };\n    }, [\n        ms,\n        value\n    ]);\n    return ms === 0 ? value : throttledValue;\n}\nexports.useThrottledValue = useThrottledValue;\nfunction shouldRejectKeystrokes(_a) {\n    var _b, _c, _d;\n    var _e = _a === void 0 ? {\n        ignoreWhenFocused: []\n    } : _a, ignoreWhenFocused = _e.ignoreWhenFocused;\n    var inputs = __spreadArray([\n        \"input\",\n        \"textarea\"\n    ], ignoreWhenFocused, true).map(function(el) {\n        return el.toLowerCase();\n    });\n    var activeElement = document.activeElement;\n    var ignoreStrokes = activeElement && (inputs.indexOf(activeElement.tagName.toLowerCase()) !== -1 || ((_b = activeElement.attributes.getNamedItem(\"role\")) === null || _b === void 0 ? void 0 : _b.value) === \"textbox\" || ((_c = activeElement.attributes.getNamedItem(\"contenteditable\")) === null || _c === void 0 ? void 0 : _c.value) === \"true\" || ((_d = activeElement.attributes.getNamedItem(\"contenteditable\")) === null || _d === void 0 ? void 0 : _d.value) === \"plaintext-only\");\n    return ignoreStrokes;\n}\nexports.shouldRejectKeystrokes = shouldRejectKeystrokes;\nvar SSR = \"undefined\" === \"undefined\";\nvar isMac = !SSR && window.navigator.platform === \"MacIntel\";\nfunction isModKey(event) {\n    return isMac ? event.metaKey : event.ctrlKey;\n}\nexports.isModKey = isModKey;\nexports.Priority = {\n    HIGH: 1,\n    NORMAL: 0,\n    LOW: -1\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kbar/lib/utils.js\n");

/***/ })

};
;